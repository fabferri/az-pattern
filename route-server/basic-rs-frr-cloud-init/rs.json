{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "azure region where is deployed the vnet1"
            }
        },
        "cloudInitContent": {
            "type": "string",
            "metadata": {
                "description": "content of cloud-init config file"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for sample VM"
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet1",
            "metadata": {
                "description": "virtual network name"
            }
        },
        "nvaName": {
            "type": "string",
            "defaultValue": "nva",
            "metadata": {
                "description": "nva VM"
            }
        },
        "vm1Name": {
            "type": "string",
            "defaultValue": "vm1",
            "metadata": {
                "description": "vm1 VM"
            }
        }
    },
    "variables": {
        "location": "[parameters('location')]",
        "customData": "[parameters('cloudInitContent') ]",
        "vnetName": "[parameters('vnetName')]",
        "addressSpace1Prefix": "10.10.0.0/16",
        "subnet1Name": "RouteServerSubnet",
        "subnet1Prefix": "10.10.1.0/24",
        "subnet2Name": "subnet2",
        "subnet2Prefix": "10.10.2.0/24",
        "subnet3Name": "subnet3",
        "subnet3Prefix": "10.10.3.0/24",
        "subnet4Name": "subnet4",
        "subnet4Prefix": "10.10.4.0/24",
        "gatewaysubnetPrefix": "10.10.5.0/24",
        "rsName": "rs1",
        "peering1IP": "10.10.4.10",
        "peering1ASN": 65001,
        "rsBGPconnectionName": "bgp-conn1",
        "subnet_rs1_Id": "[resourceId( 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),'RouteServerSubnet' )]",
        "vHubIPconfigName": "ipconfig1",
        "bgpConnectionName": "[concat(variables('rsName'), '/', variables('rsBGPconnectionName'))]",
        "rsPubIPName": "[concat(variables('rsName'),'-pubIP')]",

        "nvaName": "[parameters('nvaName')]",
        "nvaNicName": "[concat(variables('nvaName'),'-nic')]",
        "nvapubIPName": "[concat(variables('nvaName'),'-pubIP')]",
        "nvaPrivIP": "10.10.4.10",

        "vm1Name": "[parameters('vm1Name')]",
        "vm1NicName": "[concat(variables('vm1Name'),'-nic')]",
        "vm1pubIPName": "[concat(variables('vm1Name'),'-pubIP')]",
        "vm1PrivIP": "10.10.2.10",

        "publisher": "canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts-gen2",
        "vmSize": "Standard_B1s",
        "nsgName": "nsg1",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        }
    },
    "resources": [
        {
            "comments": "NSG applied to the subnets",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-private-netw",
                        "properties": {
                            "description": "allow private network",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "10.0.0.0/8",
                            "destinationAddressPrefix": "10.0.0.0/8",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "comments": "Create VNet1",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressSpace1Prefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet2Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet3Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('subnet4Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet4Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('gatewaysubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "comments": "create a virtual hub object",
            "type": "Microsoft.Network/virtualHubs",
            "apiVersion": "2022-05-01",
            "name": "[variables('rsName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnetName') )]"
            ],
            "properties": {
                "sku": "Standard",
                "allowBranchToBranchTraffic": true
            },
            "resources": []
        },
        {
            "comments": "public IP of the route server",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('rsPubIPName')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "comments": "create the route server and attach it to the RouteServerSubnet subnet",
            "type": "Microsoft.Network/virtualHubs/ipConfigurations",
            "apiVersion": "2022-05-01",
            "name": "[concat(variables('rsName'), '/',variables('vHubIPconfigName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', variables('rsName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('rsPubIPName') )]"
            ],
            "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                    "id": "[variables('subnet_rs1_Id')]"
                },
                "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('rsPubIPName') )]"
                }
            }
        },
        {
            "comments": "name of the BGP connection configured on the route server- BGP connection can be created at end of Microsoft.Network/virtualHubs/ipConfigurations",
            "type": "Microsoft.Network/virtualHubs/bgpConnections",
            "apiVersion": "2022-05-01",
            "name": "[variables('bgpConnectionName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs/ipConfigurations', variables('rsName'), variables('vHubIPconfigName'))]"
            ],
            "properties": {
                "peerIp": "[variables('peering1IP')]",
                "peerAsn": "[variables('peering1ASN')]"
            }
        },
        {
            "comments": "public IP of the nva",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('nvapubIPName')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location')]",
             "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nvaNicName')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('nvapubIPName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconf-nic0",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('nvaPrivIP')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('nvapubIPName')  )]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnet4Name') )]"

                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('nvaName') ]",
            "apiVersion": "2022-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nvaNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('nvaName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "customData": "[base64(variables('customData'))]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('publisher')]",
                        "offer": "[variables('offer')]",
                        "sku": "[variables('sku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('nvaName'),'-OSdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nvaNicName') )]"
                        }
                    ]
                }
            }
        },
        {
            "comments": "public IP of the vm1",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vm1pubIPName')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location')]",
             "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "comments": "NIC of the vm1",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm1NicName')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1pubIPName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconf-nic",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vm1PrivIP')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm1pubIPName')  )]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnet2Name') )]"

                            }
                        }
                    }
                ],
                "enableIPForwarding": false
            }
        },
        {
            "comments": "create vm1 in subnet1",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vm1Name') ]",
            "apiVersion": "2022-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vm1Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('publisher')]",
                        "offer": "[variables('offer')]",
                        "sku": "[variables('sku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vm1Name'),'-OSdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "deleteOption": "Delete"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName') )]"
                        }
                    ]
                }
            }
        }
    ]
}
