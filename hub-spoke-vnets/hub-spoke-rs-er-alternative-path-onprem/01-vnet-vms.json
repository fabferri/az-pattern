{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "azure region where is deployed the vnet"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password for the VMs"
            }
        },
        "gatewayName": {
            "type": "string",
            "defaultValue": "SEA-Cust34-VNet01-gw-er",
            "metadata": {
                "description": "name of the ExpressRoute Gateway"
            }
        },
        "gatewaySku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "HighPerformance",
                "UltraPerformance",
                "ErGw1AZ",
                "ErGw2AZ",
                "ErGw3AZ"
            ],
            "metadata": {
                "description": "ExpressRoute Gateway SKU"
            }
        }
    },
    "variables": {
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "vmSize": "Standard_B2s",
        "vnet": {
            "location": "[parameters('location')]",
            "name": "SEA-Cust34-VNet01",
            "addressSpace1Prefix": "10.17.34.0/24",
            "addressSpace2Prefix": "10.0.1.0/24",
            "fwSubnetName": "fwSubnet",
            "fwSubnetPrefix": "10.17.34.0/27",
            "tenantSubnetName": "tenantSubnet",
            "tenantSubnetPrefix": "10.17.34.32/27",
            "gatewaySubnetName": "GatewaySubnet",
            "gatewaySubnetPrefix": "10.17.34.128/25",
            "nvaSubnetName": "nvaSubnet",
            "nvaSubnetPrefix": "10.0.1.0/25",
            "routeServerSubnetName": "RouteServerSubnet",
            "routeServerSubnetPrefix": "10.0.1.128/25"
        },
        "udrGtwsubnetName": "[concat(variables('vnet').name,'-gtw-udr')]",
        "spokeAddressSpace": "10.0.50.0/24",
        "vm1Name": "SEA-Cust34-vm1",
        "vm1privIP": "10.17.34.50",
        "fwName": "SEA-Cust34-fw",
        "fwprivIP": "10.17.34.10",
        "vmarray": [
            {
                "location": "[variables('vnet').location]",
                "vmName": "[variables('vm1Name')]",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-jammy",
                "sku": "22_04-lts-gen2",
                "version": "latest",
                "vnetName": "[variables('vnet').name]",
                "subnetName": "[variables('vnet').tenantSubnetName]",
                "pubIPName": "[concat(variables('vm1Name'),'-nic-pip')]",
                "nicName": "[concat(variables('vm1Name'),'-nic')]",
                "nsgName": "[concat(variables('vm1Name'),'-nic-nsg')]",
                "privateIP": "[variables('vm1privIP')]",
                "ipforwarding": false
            },
            {
                "location": "[variables('vnet').location]",
                "vmName": "[variables('fwName')]",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-jammy",
                "sku": "22_04-lts-gen2",
                "version": "latest",
                "vnetName": "[variables('vnet').name]",
                "subnetName": "[variables('vnet').fwSubnetName]",
                "pubIPName": "[concat(variables('fwName'),'-nic-pip')]",
                "nicName": "[concat(variables('fwName'),'-nic')]",
                "nsgName": "[concat(variables('fwName'),'-nic-nsg')]",
                "privateIP": "[variables('fwprivIP')]",
                "ipforwarding": true
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('udrGtwsubnetName')]",
            "apiVersion": "2020-11-01",
            "location": "[variables('vnet').location]",
            "comments": "UDR applied to the vnet02",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "to-spoke1",
                        "properties": {
                            "addressPrefix": "[variables('spokeAddressSpace')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('fwprivIP')]"
                        }
                    }
                ]
            }
        },        
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet').name]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vNet').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables',variables('udrGtwsubnetName'))]"
            ],
            "comments": "This is the first vNet",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet').addressSpace1Prefix]",
                        "[variables('vnet').addressSpace2Prefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet').fwSubnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet').fwSubnetPrefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet').tenantSubnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet').tenantSubnetPrefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet').gatewaySubnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet').gatewaySubnetPrefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('udrGtwsubnetName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vnet').nvaSubnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet').nvaSubnetPrefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet').routeServerSubnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet').routeServerSubnetPrefix]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2021-02-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('vmArray')[copyIndex()].nsgName]",
            "location": "[variables('vnet').location]",
            "comments": "network security rule",
            "copy": {
                "name": "nsgCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vmArray')[copyIndex()].pubIPName]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "Public IP address VMs",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "publicIpCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vmArray')[copyIndex()].nicName]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "NIC of the VMs",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIPName  )]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vmArray')[copyIndex()].vnetName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIPName  )]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vmArray')[copyIndex()].vnetName, variables('vmArray')[copyIndex()].subnetName)]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].ipforwarding]"
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2021-03-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArray')[copyIndex()].nicName  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                        "version": "[variables('vmArray')[copyIndex()].version]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OSdisk')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArray')[copyIndex()].nicName  )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        }
    ]
}