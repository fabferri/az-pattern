{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "firewallPolicy1Name": {
            "defaultValue": "azfw1Policy",
            "type": "string"
        },
        "firewallPolicy2Name": {
            "defaultValue": "azfw2Policy",
            "type": "string"
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "locationhub1": {
            "type": "string",
            "defaultValue": "northeurope",
            "metadata": {
                "description": "Azure region"
            }
        },
        "locationspoke1": {
            "type": "string",
            "defaultValue": "northeurope",
            "metadata": {
                "description": "Azure region"
            }
        },
        "locationspoke2": {
            "type": "string",
            "defaultValue": "northeurope",
            "metadata": {
                "description": "Azure region"
            }
        },
        "locationhub2": {
            "type": "string",
            "defaultValue": "northeurope",
            "metadata": {
                "description": "Azure region"
            }
        },
        "locationspoke3": {
            "type": "string",
            "defaultValue": "northeurope",
            "metadata": {
                "description": "Azure region"
            }
        },
        "locationspoke4": {
            "type": "string",
            "defaultValue": "northeurope",
            "metadata": {
                "description": "Azure region"
            }
        },
        "hub1": {
            "type": "object",
            "defaultValue": {
                "location": "[parameters('locationhub1')]",
                "name": "hub1",
                "addressPrefix": "10.11.0.0/23",
                "AzureFirewallSubnetName": "AzureFirewallSubnet",
                "AzureFirewallSubnetPrefix": "10.11.0.0/26",
                "appSubnetName": "appSubnet",
                "appSubnetPrefix": "10.11.0.64/27",
                "AzureBastionSubnetName": "AzureBastionSubnet",
                "AzureBastionSubnetPrefix": "10.11.0.128/26"
            }
        },
        "spoke1": {
            "type": "object",
            "defaultValue": {
                "location": "[parameters('locationspoke1')]",
                "name": "spoke1",
                "addressPrefix": "10.0.1.0/24",
                "subnet1Name": "subnet1",
                "subnet1Prefix": "10.0.1.0/25"
            }
        },
        "spoke2": {
            "type": "object",
            "defaultValue": {
                "location": "[parameters('locationspoke2')]",
                "name": "spoke2",
                "addressPrefix": "10.0.2.0/24",
                "subnet1Name": "subnet1",
                "subnet1Prefix": "10.0.2.0/25"
            }
        },
        "hub2": {
            "type": "object",
            "defaultValue": {
                "location": "[parameters('locationhub2')]",
                "name": "hub2",
                "addressPrefix": "10.12.0.0/23",
                "AzureFirewallSubnetName": "AzureFirewallSubnet",
                "AzureFirewallSubnetPrefix": "10.12.0.0/26",
                "appSubnetName": "appSubnet",
                "appSubnetPrefix": "10.12.0.64/27",
                "AzureBastionSubnetName": "AzureBastionSubnet",
                "AzureBastionSubnetPrefix": "10.12.0.128/26"
            }
        },
        "spoke3": {
            "type": "object",
            "defaultValue": {
                "location": "[parameters('locationspoke3')]",
                "name": "spoke3",
                "addressPrefix": "10.0.3.0/24",
                "subnet1Name": "subnet1",
                "subnet1Prefix": "10.0.3.0/25"
            }
        },
        "spoke4": {
            "type": "object",
            "defaultValue": {
                "location": "[parameters('locationspoke4')]",
                "name": "spoke4",
                "addressPrefix": "10.0.4.0/24",
                "subnet1Name": "subnet1",
                "subnet1Prefix": "10.0.4.0/25"
            }
        },
        "linux": {
            "type": "object",
            "defaultValue": {
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-jammy",
                "sku": "22_04-lts-gen2"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "Size of VM"
            }
        },
        "availabilityZones": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Zone numbers e.g. 1,2,3."
            }
        },
        "numberOfFirewallPublicIPAddresses": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 100,
            "metadata": {
                "description": "Number of public IP addresses for the Azure Firewall"
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The storage account type for the disks of the VM"
            }
        },
        "acceleratedNetworking": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "acceletated networking"
            }
        }
    },
    "variables": {
        "peeringNamehub1spoke1": "[concat(parameters('hub1').name,'To',parameters('spoke1').name)]",
        "peeringNamespoke1hub1": "[concat(parameters('spoke1').name,'To',parameters('hub1').name)]",
        "peeringNamehub1spoke2": "[concat(parameters('hub1').name,'To',parameters('spoke2').name)]",
        "peeringNamespoke2hub1": "[concat(parameters('spoke2').name,'To',parameters('hub1').name)]",

        "peeringNamehub2spoke3": "[concat(parameters('hub2').name,'To',parameters('spoke3').name)]",
        "peeringNamespoke3hub2": "[concat(parameters('spoke3').name,'To',parameters('hub2').name)]",
        "peeringNamehub2spoke4": "[concat(parameters('hub2').name,'To',parameters('spoke4').name)]",
        "peeringNamespoke4hub2": "[concat(parameters('spoke4').name,'To',parameters('hub2').name)]",
        "peeringNamehub1hub2": "[concat(parameters('hub1').name,'To',parameters('hub2').name)]",
        "peeringNamehub2hub1": "[concat(parameters('hub2').name,'To',parameters('hub1').name)]",

        "udrAppSubnethub1": "udrAppSubnethub1",
        "udrspoke1": "udrspoke1",
        "udrspoke2": "udrspoke2",

        "udrAppSubnethub2": "udrAppSubnethub2",
        "udrspoke3": "udrspoke3",
        "udrspoke4": "udrspoke4",

        "nextHopIPAzFw1": "10.11.0.4",
        "nextHopIPAzFw2": "10.12.0.4",
        "firewall1Name": "azfw1",
        "azfw1PubIPNamePrefix": "azfw1-pubIP",
        "azfw1SubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('hub1').name, parameters('hub1').AzureFirewallSubnetName)]",
        "azfw1SubnetJSON": "[json(format('{{\"id\": \"{0}\"}}', variables('azfw1SubnetId')))]",

        "firewall2Name": "azfw2",
        "azfw2PubIPNamePrefix": "azfw2-pubIP",
        "azfw2SubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('hub2').name, parameters('hub2').AzureFirewallSubnetName)]",
        "azfw2SubnetJSON": "[json(format('{{\"id\": \"{0}\"}}', variables('azfw2SubnetId')))]",

        "copy": [
            {
                "name": "azfw1IpConfigurations",
                "count": "[parameters('numberOfFirewallPublicIPAddresses')]",
                "input": {
                    "name": "[concat('IpConf', copyIndex('azfw1IpConfigurations'))]",
                    "properties": {
                        "subnet": "[if(equals(copyIndex('azfw1IpConfigurations'), 0), variables('azfw1SubnetJSON'), json('null'))]",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('azfw1PubIPNamePrefix'), add(copyIndex('azfw1IpConfigurations'), 1)))]"
                        }
                    }
                }
            },
            {
                "name": "azfw2IpConfigurations",
                "count": "[parameters('numberOfFirewallPublicIPAddresses')]",
                "input": {
                    "name": "[concat('IpConf', copyIndex('azfw2IpConfigurations'))]",
                    "properties": {
                        "subnet": "[if(equals(copyIndex('azfw2IpConfigurations'), 0), variables('azfw2SubnetJSON'), json('null'))]",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('azfw2PubIPNamePrefix'), add(copyIndex('azfw2IpConfigurations'), 1)))]"
                        }
                    }
                }
            }
        ],

        "bastion1Name": "bastion1",
        "bastion1PublicIPAddressName": "[concat(variables('bastion1Name'),'-pubIP')]",
        "bastion2Name": "bastion2",
        "bastion2PublicIPAddressName": "[concat(variables('bastion2Name'),'-pubIP')]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        },
        "linuxUpdate": "sudo apt update",
        "linuxNgixCommand": "[concat('sudo apt-get -y install nginx && sudo systemctl enable nginx && sudo systemctl start nginx',' && ','echo \"<style> h1 { color: blue; } </style> <h1>\" > /var/www/html/index.nginx-debian.html', ' && ', 'cat /etc/hostname >> /var/www/html/index.nginx-debian.html', ' && ', 'echo \" </h1>\" >> /var/www/html/index.nginx-debian.html')]",
        "linuxCommand": "[concat( 'sleep 1m', ' &&', variables('linuxUpdate'), ' && ', variables('linuxNgixCommand') )]",
        "vmhub1": "vmhub1",
        "vmhub1IPAddr": "10.11.0.80",
        "vmspoke1": "vmspoke1",
        "vmspoke1IPAddr": "10.0.1.10",
        "vmspoke2": "vmspoke2",
        "vmspoke2IPAddr": "10.0.2.10",
        "vmhub2": "vmhub2",
        "vmhub2IPAddr": "10.12.0.80",
        "vmspoke3": "vmspoke3",
        "vmspoke3IPAddr": "10.0.3.10",
        "vmspoke4": "vmspoke4",
        "vmspoke4IPAddr": "10.0.4.10",

        "vmArray": [
            {
                "deployment": true,
                "location": "[parameters('hub1').location]",
                "vmName": "[variables('vmhub1')]",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[parameters('hub1').name]",
                "subnetName": "[parameters('hub1').appSubnetName]",
                "nicName": "[concat(variables('vmhub1'),'-nic')]",
                "privateIP": "[variables('vmhub1IPAddr')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "nsgName": "[concat(variables('vmhub1'),'-nsg')]",
                "pubIP": "[concat(variables('vmhub1'),'-pubIP')]",
                "commandToExecute": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "location": "[parameters('spoke1').location]",
                "vmName": "[variables('vmspoke1')]",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[parameters('spoke1').name]",
                "subnetName": "[parameters('spoke1').subnet1Name]",
                "nicName": "[concat(variables('vmspoke1'),'-nic')]",
                "privateIP": "[variables('vmspoke1IPAddr')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "nsgName": "[concat(variables('vmspoke1'),'-nsg')]",
                "pubIP": "[concat(variables('vmspoke1'),'-pubIP')]",
                "commandToExecute": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "location": "[parameters('spoke2').location]",
                "vmName": "[variables('vmspoke2')]",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[parameters('spoke2').name]",
                "subnetName": "[parameters('spoke2').subnet1Name]",
                "nicName": "[concat(variables('vmspoke2'),'-nic')]",
                "privateIP": "[variables('vmspoke2IPAddr')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "nsgName": "[concat(variables('vmspoke2'),'-nsg')]",
                "pubIP": "[concat(variables('vmspoke2'),'-pubIP')]",
                "commandToExecute": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "location": "[parameters('hub2').location]",
                "vmName": "[variables('vmhub2')]",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[parameters('hub2').name]",
                "subnetName": "[parameters('hub2').appSubnetName]",
                "nicName": "[concat(variables('vmhub2'),'-nic')]",
                "privateIP": "[variables('vmhub2IPAddr')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "nsgName": "[concat(variables('vmhub2'),'-nsg')]",
                "pubIP": "[concat(variables('vmhub2'),'-pubIP')]",
                "commandToExecute": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "location": "[parameters('spoke3').location]",
                "vmName": "[variables('vmspoke3')]",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[parameters('spoke3').name]",
                "subnetName": "[parameters('spoke3').subnet1Name]",
                "nicName": "[concat(variables('vmspoke3'),'-nic')]",
                "privateIP": "[variables('vmspoke3IPAddr')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "nsgName": "[concat(variables('vmspoke3'),'-nsg')]",
                "pubIP": "[concat(variables('vmspoke3'),'-pubIP')]",
                "commandToExecute": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "location": "[parameters('spoke4').location]",
                "vmName": "[variables('vmspoke4')]",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[parameters('spoke4').name]",
                "subnetName": "[parameters('spoke4').subnet1Name]",
                "nicName": "[concat(variables('vmspoke4'),'-nic')]",
                "privateIP": "[variables('vmspoke4IPAddr')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "nsgName": "[concat(variables('vmspoke4'),'-nsg')]",
                "pubIP": "[concat(variables('vmspoke4'),'-pubIP')]",
                "commandToExecute": "[variables('linuxCommand')]"
            }
        ],
        "vmCount": "[length(variables('vmArray'))]",
        "vmStorageAccountType": "[parameters('storageAccountType')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('udrAppSubnethub1')]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub1').location]",
            "comments": "UDR applied to the app Subnet in hub1 ",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "defaultRoute-to-azfw",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nextHopIPAzFw1')]"
                        }
                    },
                    {
                        "name": "Major10",
                        "properties": {
                            "addressPrefix": "10.0.0.0/8",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nextHopIPAzFw2')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('udrspoke1')]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke1').location]",
            "comments": "UDR applied to the spoke1 subnet",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "defaultRoute-to-azfw",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nextHopIPAzFw1')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('udrspoke2')]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke2').location]",
            "comments": "UDR applied to the spoke2 subnet",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "defaultRoute-to-azfw",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nextHopIPAzFw1')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('udrAppSubnethub2')]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub2').location]",
            "comments": "UDR applied to the appsubnet in hub2",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "defaultRoute-to-azfw2",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nextHopIPAzFw2')]"
                        }
                    },
                    {
                        "name": "Major10",
                        "properties": {
                            "addressPrefix": "10.0.0.0/8",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nextHopIPAzFw1')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('udrspoke3')]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke3').location]",
            "comments": "UDR applied to the spoke3 subnet",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "defaultRoute-to-azfw",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nextHopIPAzFw2')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('udrspoke4')]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke4').location]",
            "comments": "UDR applied to the spoke4 subnet",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "defaultRoute-to-azfw",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nextHopIPAzFw2')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('hub1').name]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub1').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables',variables('udrAppSubnethub1'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hub1').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('hub1').AzureFirewallSubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('hub1').AzureFirewallSubnetPrefix]"
                        }
                    },
                    {
                        "name": "[parameters('hub1').appSubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('hub1').appSubnetPrefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('udrAppSubnethub1'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('hub1').AzureBastionSubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('hub1').AzureBastionSubnetPrefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spoke1').name]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke1').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables',variables('udrspoke1'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spoke1').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('spoke1').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[parameters('spoke1').subnet1Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('udrspoke1'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spoke2').name]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke2').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables',variables('udrspoke2'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spoke2').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('spoke2').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[parameters('spoke2').subnet1Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('udrspoke2'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('hub1').name,'/',variables('peeringNamehub1spoke1'))]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub1').location]",
            "comments": "This is the peering from vnet1 to vnet2",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub1').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke1').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke1').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('spoke1').name,'/',variables('peeringNamespoke1hub1'))]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke1').location]",
            "comments": "This is the peering from vnet2 to vnet1",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub1').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke1').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub1').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('hub1').name,'/',variables('peeringNamehub1spoke2'))]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub1').location]",
            "comments": "This is the peering from vnet1 to vnet3",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub1').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke2').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke2').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('spoke2').name,'/',variables('peeringNamespoke2hub1'))]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke2').location]",
            "comments": "This is the peering from vnet2 to vnet1",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub1').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke2').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub1').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('hub2').name]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub2').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables',variables('udrAppSubnethub2'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hub2').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('hub2').AzureFirewallSubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('hub2').AzureFirewallSubnetPrefix]"
                        }
                    },
                    {
                        "name": "[parameters('hub2').appSubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('hub2').appSubnetPrefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('udrAppSubnethub2'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('hub2').AzureBastionSubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('hub2').AzureBastionSubnetPrefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spoke3').name]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke3').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables',variables('udrspoke3'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spoke3').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('spoke3').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[parameters('spoke3').subnet1Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('udrspoke3'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spoke4').name]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke4').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables',variables('udrspoke4'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spoke4').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('spoke4').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[parameters('spoke4').subnet1Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('udrspoke4'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('hub2').name,'/',variables('peeringNamehub2spoke3'))]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub2').location]",
            "comments": "This is the peering from vnet1 to vnet2",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub2').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke3').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke3').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('spoke3').name,'/',variables('peeringNamespoke3hub2'))]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke1').location]",
            "comments": "This is the peering from vnet2 to vnet1",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub2').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke3').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub2').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('hub2').name,'/',variables('peeringNamehub2spoke4'))]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub2').location]",
            "comments": "This is the peering from vnet1 to vnet3",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub2').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke4').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke4').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('spoke4').name,'/',variables('peeringNamespoke4hub2'))]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('spoke4').location]",
            "comments": "This is the peering from vnet2 to vnet1",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub2').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('spoke4').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub2').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('hub1').name,'/',variables('peeringNamehub1hub2'))]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub1').location]",
            "comments": "This is the peering from hub1 to hub2",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub1').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub2').name)]",
                "[resourceID('Microsoft.Network/virtualNetworks/virtualNetworkPeerings',parameters('hub1').name,variables('peeringNamehub1spoke1'))]",
                "[resourceID('Microsoft.Network/virtualNetworks/virtualNetworkPeerings',parameters('hub1').name,variables('peeringNamehub1spoke2'))]",
                "[resourceID('Microsoft.Network/virtualNetworks/virtualNetworkPeerings',parameters('hub2').name,variables('peeringNamehub2spoke3'))]",
                "[resourceID('Microsoft.Network/virtualNetworks/virtualNetworkPeerings',parameters('hub2').name,variables('peeringNamehub2spoke4'))]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub2').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('hub2').name,'/',variables('peeringNamehub2hub1'))]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub2').location]",
            "comments": "This is the peering from hub2 to hub1",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub1').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub2').name)]",
                "[resourceID('Microsoft.Network/virtualNetworks/virtualNetworkPeerings',parameters('hub1').name,variables('peeringNamehub1spoke1'))]",
                "[resourceID('Microsoft.Network/virtualNetworks/virtualNetworkPeerings',parameters('hub1').name,variables('peeringNamehub1spoke2'))]",
                "[resourceID('Microsoft.Network/virtualNetworks/virtualNetworkPeerings',parameters('hub2').name,variables('peeringNamehub2spoke3'))]",
                "[resourceID('Microsoft.Network/virtualNetworks/virtualNetworkPeerings',parameters('hub2').name,variables('peeringNamehub2spoke4'))]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', parameters('hub1').name)]"
                }
            }
        },
        {
            "name": "[concat(variables('azfw1PubIPNamePrefix'), add(copyIndex(), 1))]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub1').location]",
            "comments": "public IPs of the Azure firewall in hub1",
            "sku": {
                "name": "Standard"
            },
            "copy": {
                "name": "publicIpCopy1",
                "count": "[parameters('numberOfFirewallPublicIPAddresses')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "apiVersion": "2022-05-01",
            "type": "Microsoft.Network/firewallPolicies",
            "name": "[parameters('firewallPolicy1Name')]",
            "location": "[parameters('hub1').location]",
            "comments": "azure firewall policy associated with firewall in hub1",
            "properties": {
                "threatIntelMode": "Alert"
            },
            "resources": [
                {
                    "apiVersion": "2022-05-01",
                    "type": "ruleCollectionGroups",
                    "name": "RuleCollectionGroup1",
                    "location": "[parameters('hub1').location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/firewallPolicies',parameters('firewallPolicy1Name'))]"
                    ],
                    "properties": {
                        "priority": 200,
                        "ruleCollections": [
                            {
                                "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                                "name": "rules-local",
                                "action": {
                                    "type": "Allow"
                                },
                                "priority": 120,
                                "rules": [
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "spoke1",
                                        "ipProtocols": [
                                            "Any"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                            "[parameters('spoke1').addressPrefix]"
                                        ],
                                        "destinationAddresses": [
                                            "10.0.0.0/8"
                                        ]
                                    },
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "spoke2",
                                        "ipProtocols": [
                                            "Any"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                             "[parameters('spoke2').addressPrefix]"
                                        ],
                                        "destinationAddresses": [
                                            "10.0.0.0/8"
                                        ]
                                    },
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "spoke3",
                                        "ipProtocols": [
                                            "Any"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                             "[parameters('spoke3').addressPrefix]"
                                        ],
                                        "destinationAddresses": [
                                            "10.0.0.0/8"
                                        ]
                                    },
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "spoke4",
                                        "ipProtocols": [
                                            "Any"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                             "[parameters('spoke4').addressPrefix]"
                                        ],
                                        "destinationAddresses": [
                                            "10.0.0.0/8"
                                        ]
                                    },
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "on-prem",
                                        "ipProtocols": [
                                            "Any"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                             "10.1.34.0/25"
                                        ],
                                        "destinationAddresses": [
                                            "10.0.0.0/8"
                                        ]
                                    }
                                ]
                            },
                            {
                                "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                                "name": "Rules-to-internet",
                                "action": {
                                    "type": "allow"
                                },
                                "priority": 500,
                                "rules": [
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "localnetw-to-internet",
                                        "ipProtocols": [
                                            "TCP"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                            "10.0.0.0/8"
                                        ],
                                        "destinationAddresses": [
                                            "0.0.0.0/0"
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "apiVersion": "2022-05-01",
            "type": "Microsoft.Network/azureFirewalls",
            "name": "[variables('firewall1Name')]",
            "location": "[parameters('hub1').location]",
            "comments": "azure firewall in hub1",
            "zones": "[if(equals(length(parameters('availabilityZones')), 0), json('null'), parameters('availabilityZones'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hub1').name)]",
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicy1Name'))]",
                "publicIpCopy1"
            ],
            "properties": {
                "ipConfigurations": "[variables('azfw1IpConfigurations')]",
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicy1Name'))]"
                }
            }
        },
        {
            "name": "[concat(variables('azfw2PubIPNamePrefix'), add(copyIndex(), 1))]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-05-01",
            "comments": "public IPs of the Azure firewall in hub2",
            "location": "[parameters('hub2').location]",
            "sku": {
                "name": "Standard"
            },
            "copy": {
                "name": "publicIpCopy2",
                "count": "[parameters('numberOfFirewallPublicIPAddresses')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "apiVersion": "2022-05-01",
            "type": "Microsoft.Network/firewallPolicies",
            "name": "[parameters('firewallPolicy2Name')]",
            "location": "[parameters('hub2').location]",
            "comments": "azure firewall policy associated with the firewall in hub2",
            "properties": {
                "threatIntelMode": "Alert"
            },
            "resources": [
                {
                    "apiVersion": "2022-05-01",
                    "type": "ruleCollectionGroups",
                    "name": "RuleCollectionGroup1",
                    "location": "[parameters('hub2').location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/firewallPolicies',parameters('firewallPolicy2Name'))]"
                    ],
                    "properties": {
                        "priority": 200,
                        "ruleCollections": [
                            {
                                "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                                "name": "rules-local",
                                "action": {
                                    "type": "Allow"
                                },
                                "priority": 120,
                                "rules": [
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "spoke1",
                                        "ipProtocols": [
                                            "Any"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                            "[parameters('spoke1').addressPrefix]"
                                        ],
                                        "destinationAddresses": [
                                            "10.0.0.0/8"
                                        ]
                                    },
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "spoke2",
                                        "ipProtocols": [
                                            "Any"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                             "[parameters('spoke2').addressPrefix]"
                                        ],
                                        "destinationAddresses": [
                                            "10.0.0.0/8"
                                        ]
                                    },
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "spoke3",
                                        "ipProtocols": [
                                            "Any"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                             "[parameters('spoke3').addressPrefix]"
                                        ],
                                        "destinationAddresses": [
                                            "10.0.0.0/8"
                                        ]
                                    },
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "spoke4",
                                        "ipProtocols": [
                                            "Any"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                             "[parameters('spoke4').addressPrefix]"
                                        ],
                                        "destinationAddresses": [
                                            "10.0.0.0/8"
                                        ]
                                    },
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "on-prem",
                                        "ipProtocols": [
                                            "Any"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                             "10.1.34.0/25"
                                        ],
                                        "destinationAddresses": [
                                            "10.0.0.0/8"
                                        ]
                                    }
                                ]
                            },
                            {
                                "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                                "name": "Rules-to-internet",
                                "action": {
                                    "type": "allow"
                                },
                                "priority": 500,
                                "rules": [
                                    {
                                        "ruleType": "NetworkRule",
                                        "name": "localnetw-to-internet",
                                        "ipProtocols": [
                                            "TCP"
                                        ],
                                        "destinationPorts": [
                                            "*"
                                        ],
                                        "sourceAddresses": [
                                            "10.0.0.0/8"
                                        ],
                                        "destinationAddresses": [
                                            "0.0.0.0/0"
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "apiVersion": "2022-05-01",
            "type": "Microsoft.Network/azureFirewalls",
            "name": "[variables('firewall2Name')]",
            "location": "[parameters('hub2').location]",
            "comments": "azure firewall in hub1 vnet",
            "zones": "[if(equals(length(parameters('availabilityZones')), 0), json('null'), parameters('availabilityZones'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hub2').name)]",
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicy2Name'))]",
                "publicIpCopy2"
            ],
            "properties": {
                "ipConfigurations": "[variables('azfw2IpConfigurations')]",
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicy2Name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('bastion1PublicIPAddressName')]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub1').location]",
            "comments": "public IP of the Azure bastion in hub1 vnet",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2022-05-01",
            "name": "[variables('bastion1Name')]",
            "location": "[parameters('hub1').location]",
            "comments": "Azure bastion in hub1 vnet",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastion1PublicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hub1').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastion1PublicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hub1').name, parameters('hub1').AzureBastionSubnetName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('bastion2PublicIPAddressName')]",
            "apiVersion": "2022-05-01",
            "location": "[parameters('hub2').location]",
            "comments": "public IP of the Azure bastion in hub2 vnet",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2022-05-01",
            "name": "[variables('bastion2Name')]",
            "location": "[parameters('hub2').location]",
            "comments": "Azure bastion in hub2 vnet",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastion2PublicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hub2').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastion2PublicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hub2').name, parameters('hub2').AzureBastionSubnetName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-05-01",
            "name": "[variables('vmArray')[copyIndex()].nsgName]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "copy": {
                "name": "nsgCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat( variables('vmArray')[copyIndex()].pubIP )]",
            "apiVersion": "2022-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            },
            "copy": {
                "name": "pubIPCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vmArray')[copyIndex()].nicName]",
            "apiVersion": "2022-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vmArray')[copyIndex()].vnetName) ]",
                "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIP) ]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmArray')[copyIndex()].nsgName )]",
                "[resourceId('Microsoft.Network/azureFirewalls',variables('firewall1Name'))]",
                "[resourceId('Microsoft.Network/azureFirewalls',variables('firewall2Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
                            "subnet": {
                                "id": "[resourceId( 'Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vnetName, variables('vmArray')[copyIndex()].subnetName)]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIP) ]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmArray')[copyIndex()].nsgName )]"
                },
                "primary": true,
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]",
                "enableAcceleratedNetworking": "[variables('vmArray')[copyIndex()].acceleratedNetworking]"
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2022-11-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArray')[copyIndex()].nicName )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('vmStorageAccountType')]"
                        },
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName, '-OSdisk')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',  variables('vmArray')[copyIndex()].nicName)]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmArray')[copyIndex()].vmName, '/', 'installcustomscript')]",
            "apiVersion": "2022-11-01",
            "comments": "custom script extension for ubuntu",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmArray')[copyIndex()].vmName )]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "commandToExecute": "[variables('vmArray')[copyIndex()].commandToExecute]"
                }
            }
        }
    ]
}
