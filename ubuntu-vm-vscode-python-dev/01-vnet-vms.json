{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {},
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation. If your artifacts are stored on a public repo or public storage account you can leave this blank."
            }
        },
        "scriptFolder": {
            "type": "string",
            "defaultValue": "scripts",
            "metadata": {
                "description": "script folder of the script repository"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet1",
            "metadata": {
                "description": "Virtual Network Name"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machines"
            }
        },
        "linux": {
            "type": "object",
            "defaultValue": {
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-jammy",
                "sku": "22_04-lts-gen2",
                "version": "latest"
            }
        },
        "windows": {
            "type": "object",
            "defaultValue": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2022-Datacenter",
                "version": "latest"
            }
        },
        "adminPassword": {
            "type": "secureString",
            "metadata": {
                "description": "Password for the Virtual Machine. The password must be at least 12 characters long and have lower case, upper characters, digit and a special character (Regex match)"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2als_v2",
            "allowedValues": [
                "Standard_B2as_v2",
                "Standard_B2als_v2",
                "Standard_D2s_v3",
                "Standard_D2s_v4",
                "Standard_D2s_v5"
            ],
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "diskStorageAccounType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
            ],
            "metadata": {
                "description": "Specifies the storage account type for OS and data disk."
            }
        }
    },
    "variables": {
        "gnomeScriptFileName": "dev-python.sh",
        "gnomeScriptURL": "[uri(parameters('_artifactsLocation'), concat(parameters('scriptFolder'), '/', variables('gnomeScriptFileName'), parameters('_artifactsLocationSasToken')))]",
        "gnomeCommand": "[format('bash {0} {1}', variables('gnomeScriptFileName'), parameters('adminUsername')  )]",

        "location": "[parameters('location')]",
        "vnetName": "[parameters('vnetName')]",
        "vnetAddressPrefix": "10.0.0.0/16",
        "subnet1Name": "workloadSubnet1",
        "subnet1Prefix": "10.0.1.0/24",
        "subnet2Name": "workloadSubnet2",
        "subnet2Prefix": "10.0.2.0/24",


        "vm11Name": "vm11",
        "vm11privIP": "10.0.1.10",
        "vm12Name": "vm12",
        "vm12privIP": "10.0.1.11",
        "vm21Name": "vm21",
        "vm21privIP": "10.0.2.10",
        "vm22Name": "vm22",
        "vm22privIP": "10.0.2.11",
        "vmArray": [
            {
                "deployment": false,
                "location": "[variables('location')]",
                "vmName": "[variables('vm11Name')]",
                "vmSize": "[parameters('vmSize')]",
                "publisher": "[parameters('windows').publisher]",
                "offer": "[parameters('windows').offer]",
                "sku": "[parameters('windows').sku]",
                "version": "[parameters('windows').version]",
                "vnetName": "[variables('vnetName')]",
                "subnetName": "[variables('subnet1Name')]",
                "nicName": "[format('{0}-NIC', variables('vm11Name'))]",
                "privateIP": "[variables('vm11privIP')]",
                "enableIPForwarding": "false",
                "nsgName": "[format('{0}-nsg', variables('vm11Name'))]",
                "pubIP": "[format('{0}-pubIP', variables('vm11Name'))]"
            },
            {
                "deployment": false,
                "location": "[variables('location')]",
                "vmName": "[variables('vm12Name')]",
                "vmSize": "[parameters('vmSize')]",
                "publisher": "[parameters('windows').publisher]",
                "offer": "[parameters('windows').offer]",
                "sku": "[parameters('windows').sku]",
                "version": "[parameters('windows').version]",
                "vnetName": "[variables('vnetName')]",
                "subnetName": "[variables('subnet1Name')]",
                "nicName": "[format('{0}-NIC', variables('vm12Name'))]",
                "privateIP": "[variables('vm12privIP')]",
                "enableIPForwarding": "false",
                "nsgName": "[format('{0}-nsg', variables('vm12Name'))]",
                "pubIP": "[format('{0}-pubIP', variables('vm12Name'))]"
            },
            {
                "deployment": true,
                "location": "[variables('location')]",
                "vmName": "[variables('vm21Name')]",
                "vmSize": "[parameters('vmSize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "version": "[parameters('windows').version]",
                "vnetName": "[variables('vnetName')]",
                "subnetName": "[variables('subnet2Name')]",
                "nicName": "[format('{0}-NIC', variables('vm21Name'))]",
                "privateIP": "[variables('vm21privIP')]",
                "enableIPForwarding": "false",
                "nsgName": "[format('{0}-nsg', variables('vm21Name'))]",
                "pubIP": "[format('{0}-pubIP', variables('vm21Name'))]"
            },
            {
                "deployment": false,
                "location": "[variables('location')]",
                "vmName": "[variables('vm22Name')]",
                "vmSize": "[parameters('vmSize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "version": "[parameters('linux').version]",
                "vnetName": "[variables('vnetName')]",
                "subnetName": "[variables('subnet2Name')]",
                "nicName": "[format('{0}-NIC', variables('vm22Name'))]",
                "privateIP": "[variables('vm22privIP')]",
                "enableIPForwarding": "false",
                "nsgName": "[format('{0}-nsg', variables('vm22Name'))]",
                "pubIP": "[format('{0}-pubIP', variables('vm22Name'))]"
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-11-01",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]",
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "[variables('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet2Prefix')]",
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-05-01",
            "name": "[variables('vmArray')[copyIndex()].nsgName]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "copy": {
                "name": "nsgCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "RDP-rule",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "accept-private",
                        "properties": {
                            "description": "allow private networks",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "10.0.0.0/8",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 400,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat( variables('vmArray')[copyIndex()].pubIP )]",
            "apiVersion": "2022-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "copy": {
                "name": "pubIPCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vmArray')[copyIndex()].nicName]",
            "apiVersion": "2022-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vmArray')[copyIndex()].vnetName) ]",
                "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIP) ]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmArray')[copyIndex()].nsgName )]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
                            "subnet": {
                                "id": "[resourceId( 'Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vnetName, variables('vmArray')[copyIndex()].subnetName)]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIP) ]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmArray')[copyIndex()].nsgName )]"
                },
                "primary": true,
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]"
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2022-11-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArray')[copyIndex()].nicName )]"
            ],
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                        "version": "[variables('vmArray')[copyIndex()].version]"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[parameters('diskStorageAccounType')]"
                        },
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName, '-OSdisk')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',  variables('vmArray')[copyIndex()].nicName)]"
                        }
                    ]
                }
            }
        },
        {
            
            "comments": "custom script extension to configure the application VMs through a bash script",
             "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmArray')[copyIndex()].vmName, '/', 'vmCustomScript')]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmArray')[copyIndex()].vmName )]"
            ],
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('gnomeScriptURL')]"
                    ],
                    "commandToExecute": "[variables('gnomeCommand')]"
                }
            }
        }
    ],
    "outputs": {
        "vnetId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        }
    }
}