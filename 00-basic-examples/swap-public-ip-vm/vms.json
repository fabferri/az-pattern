{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "azure region where is deployed the vnet"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "admin password for the VMs"
      }
    },
    "linux": {
      "type": "object",
      "defaultValue": {
        "publisher": "canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts-gen2",
        "version": "latest"
      }
    },
    "windows": {
      "type": "object",
      "defaultValue": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2022-Datacenter",
        "version": "latest"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v5",
      "allowedValues": [
        "Standard_B1s",
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_D2as_v5",
        "Standard_D2s_v5",
        "Standard_F4s_v2"
      ],
      "metadata": {
        "description": "Size of VM"
      }
    }
  },
  "variables": {
    "vNet": {
      "location": "[parameters('location')]",
      "name": "vnet1",
      "addressSpace1Prefix": "10.0.1.0/24",
      "subnet1Name": "subnet1",
      "subnet1Prefix": "10.0.1.0/25",
      "subnet2Name": "subnet2",
      "subnet2Prefix": "10.0.1.128/25"
    },
    "nsg": {
      "name": "nsg",
      "location": "[variables('vNet').location]"
    },
    "adminUsername": "[parameters('adminUsername')]",
    "adminPassword": "[parameters('adminPassword')]",
    "vm1Name": "vm1",
    "vm2Name": "vm2",
    "pubIPName": "vm-pubIP",
    "vmarray": [
      {
        "deployment": true,
        "vmName": "[variables('vm1Name')]",
        "location": "[variables('vNet').location]",
        "vmSize": "[parameters('vmSize')]",
        "imagePublisher": "[parameters('linux').publisher ]",
        "imageOffer": "[parameters('linux').offer]",
        "sku": "[parameters('linux').sku]",
        "version": "[parameters('linux').version]",
        "VNetName": "[variables('vNet').name]",
        "SubnetName": "[variables('vNet').subnet1Name]",
        "nicName": "[concat(variables('vm1Name'),'-nic')]",
        "pubIPName": "[variables('pubIPName')]",
        "pipObject": {
          "id": "[resourceId( 'Microsoft.Network/publicIPAddresses', variables('pubIPName') ) ]"
        },
        "privateIP": "10.0.1.10",
        "ipforwarding": false
      },
      {
        "deployment": true,
        "vmName": "[variables('vm2Name')]",
        "location": "[variables('vNet').location]",
        "vmSize": "[parameters('vmsize')]",
        "imagePublisher": "[parameters('linux').publisher ]",
        "imageOffer": "[parameters('linux').offer]",
        "sku": "[parameters('linux').sku]",
        "version": "[parameters('linux').version]",
        "VNetName": "[variables('vNet').name]",
        "SubnetName": "[variables('vNet').subnet1Name]",
        "nicName": "[concat(variables('vm2Name'),'-nic')]",
        "pubIPName": "[variables('pubIPName')]",
        "pipObject": {
        //  "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('vm2Name'),'-pubIP' )  )]"
        },
        "privateIP": "10.0.1.20",
        "ipforwarding": false
      }
    ],
    "vmCount": "[length(variables('vmArray'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg').name]",
      "apiVersion": "2022-11-01",
      "location": "[variables('nsg').location]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 400,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet').name]",
      "apiVersion": "2022-11-01",
      "location": "[variables('vNet').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg').name)]"
      ],
      "comments": "This is the first vNet",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet').addressSpace1Prefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNet').subnet1Name]",
            "properties": {
              "addressPrefix": "[variables('vNet').subnet1Prefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg').name)]"
              }
            }
          },
          {
            "name": "[variables('vNet').subnet2Name]",
            "properties": {
              "addressPrefix": "[variables('vNet').subnet2Prefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg').name)]"
              }
            }
          }
        ]
      }
    },
    {
      "condition": "[and(variables('vmArray')[copyIndex()].deployment, greater(length(variables('vmArray')[copyIndex()].pipObject), 0))]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-11-01",
      "name": "[concat( variables('vmArray')[copyIndex()].pubIPName)]",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "deleteOption": "Delete",
        "publicIPAddressVersion": "IPv4"
      },
      "copy": {
        "name": "publicIpCopy",
        "count": "[variables('vmCount')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[ variables('vmArray')[copyIndex()].nicName ]",
      "apiVersion": "2022-11-01",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "comments": "NIC of the VMs",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses',concat( variables('vmArray')[copyIndex()].pubIPName )  )]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vmArray')[copyIndex()].VNetName)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
              "publicIPAddress": "[if( greater(length(variables('vmArray')[copyIndex()].pipObject), 0), variables('vmArray')[copyIndex()].pipObject, json('null') )]",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vmArray')[copyIndex()].VNetName, variables('vmArray')[copyIndex()].SubnetName)]"
              }
            }
          }
        ],
        "enableIPForwarding": "[variables('vmArray')[copyIndex()].ipforwarding]"
      },
      "copy": {
        "name": "nicCopy",
        "count": "[variables('vmCount')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmArray')[copyIndex()].vmName]",
      "apiVersion": "2023-03-01",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArray')[copyIndex()].nicName  )]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
        },
        "osProfile": {
          "computerName": "[variables('vmArray')[copyIndex()].vmName]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmArray')[copyIndex()].imagePublisher]",
            "offer": "[variables('vmArray')[copyIndex()].imageOffer]",
            "sku": "[variables('vmArray')[copyIndex()].sku]",
            "version": "[variables('vmArray')[copyIndex()].version]"
          },
          "osDisk": {
            "createOption": "FromImage",
            "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OS')]",
            "caching": "ReadWrite",
            "deleteOption": "Delete"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-NIC')  )]"
            }
          ]
        }
      },
      "copy": {
        "name": "nodeCopy",
        "count": "[variables('vmCount')]"
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    }
  }
}