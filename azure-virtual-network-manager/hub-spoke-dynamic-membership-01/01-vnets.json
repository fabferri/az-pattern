{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "locationhub": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "azure region where is deployed the first VNet"
            }
        },
        "location1": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "azure region where is deployed the first VNet"
            }
        },
        "location2": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "azure region where is deployed the second VNet"
            }
        },
        "location3": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "azure region where is deployed the second VNet"
            }
        },
        "location4": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "azure region where is deployed the second VNet"
            }
        },
        "resourceGroupNameHubVNet": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "name of the resource group with deployment of vnet1"
            }
        },
        "resourceGroupNameVNet1": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "name of the resource group with deployment of vnet1"
            }
        },
        "resourceGroupNameVNet2": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "name of the resource group with deployment of vnet2"
            }
        },
        "resourceGroupNameVNet3": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "name of the resource group with deployment of vnet3"
            }
        },
        "resourceGroupNameVNet4": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "name of the resource group with deployment of vnet4"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "admin password for the VMs"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The storage account type for the disks of the VM"
            }
        },
        "linux": {
            "type": "object",
            "defaultValue": {
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-jammy",
                "sku": "22_04-lts-gen2"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "Size of VM"
            }
        }
    },
    "variables": {
        "vNethub": {
            "resourceGroup": "[parameters('resourceGroupNameHubVNet')]",
            "location": "[parameters('locationhub')]",
            "name": "hub",
            "addressSpacePrefix": "10.0.0.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.0.0/27",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.0.224/27",
            "tag": "SHARED-vnet"
        },
        "vNet1": {
            "resourceGroup": "[parameters('resourceGroupNameVNet1')]",
            "location": "[parameters('location1')]",
            "name": "vnet1-PROD",
            "addressSpacePrefix": "10.0.1.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.1.0/27",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.1.224/27",
            "tag": "PROD-vnet"
        },
        "vNet2": {
            "resourceGroup": "[parameters('resourceGroupNameVNet2')]",
            "location": "[parameters('location2')]",
            "name": "vnet2-PROD",
            "addressSpacePrefix": "10.0.2.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.2.0/27",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.2.224/27",
            "tag": "PROD-vnet"
        },
        "vNet3": {
            "resourceGroup": "[parameters('resourceGroupNameVNet3')]",
            "location": "[parameters('location3')]",
            "name": "vnet3-DEV",
            "addressSpacePrefix": "10.0.3.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.3.0/27",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.3.224/27",
            "tag": "DEV-vnet"
        },
        "vNet4": {
            "resourceGroup": "[parameters('resourceGroupNameVNet4')]",
            "location": "[parameters('location4')]",
            "name": "vnet4-DEV",
            "addressSpacePrefix": "10.0.4.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.4.0/27",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.4.224/27",
            "tag": "DEV-vnet"
        },
        "vnetArray": [
            {
                "resourceGroup": "[variables('vNethub').resourceGroup]",
                "location": "[variables('vNethub').location]",
                "name": "[variables('vNethub').name]",
                "addressSpacePrefix": "[variables('vNethub').addressSpacePrefix]",
                "subnet1Name": "[variables('vNethub').subnet1Name]",
                "subnet1Prefix": "[variables('vNethub').subnet1Prefix]",
                "subnet2Name": "[variables('vNethub').subnet2Name]",
                "subnet2Prefix": "[variables('vNethub').subnet2Prefix]",
                "tag": "[variables('vNethub').tag]"
            },
            {
                "resourceGroup": "[variables('vNet1').resourceGroup]",
                "location": "[variables('vNet1').location]",
                "name": "[variables('vNet1').name]",
                "addressSpacePrefix": "[variables('vNet1').addressSpacePrefix]",
                "subnet1Name": "[variables('vNet1').subnet1Name]",
                "subnet1Prefix": "[variables('vNet1').subnet1Prefix]",
                "subnet2Name": "[variables('vNet1').subnet2Name]",
                "subnet2Prefix": "[variables('vNet1').subnet2Prefix]",
                "tag": "[variables('vNet1').tag]"
            },
            {
                "resourceGroup": "[variables('vNet2').resourceGroup]",
                "location": "[variables('vNet2').location]",
                "name": "[variables('vNet2').name]",
                "addressSpacePrefix": "[variables('vNet2').addressSpacePrefix]",
                "subnet1Name": "[variables('vNet2').subnet1Name]",
                "subnet1Prefix": "[variables('vNet2').subnet1Prefix]",
                "subnet2Name": "[variables('vNet2').subnet2Name]",
                "subnet2Prefix": "[variables('vNet2').subnet2Prefix]",
                "tag": "[variables('vNet2').tag]"
            },
            {
                "resourceGroup": "[variables('vNet3').resourceGroup]",
                "location": "[variables('vNet3').location]",
                "name": "[variables('vNet3').name]",
                "addressSpacePrefix": "[variables('vNet3').addressSpacePrefix]",
                "subnet1Name": "[variables('vNet3').subnet1Name]",
                "subnet1Prefix": "[variables('vNet3').subnet1Prefix]",
                "subnet2Name": "[variables('vNet3').subnet2Name]",
                "subnet2Prefix": "[variables('vNet3').subnet2Prefix]",
                "tag": "[variables('vNet3').tag]"
            },
            {
                "resourceGroup": "[variables('vNet4').resourceGroup]",
                "location": "[variables('vNet4').location]",
                "name": "[variables('vNet4').name]",
                "addressSpacePrefix": "[variables('vNet4').addressSpacePrefix]",
                "subnet1Name": "[variables('vNet4').subnet1Name]",
                "subnet1Prefix": "[variables('vNet4').subnet1Prefix]",
                "subnet2Name": "[variables('vNet4').subnet2Name]",
                "subnet2Prefix": "[variables('vNet4').subnet2Prefix]",
                "tag": "[variables('vNet4').tag]"
            }
        ],
        "vnetCount": "[length(variables('vnetArray'))]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        },
        "linuxUpdate": "sudo apt update",
        "linuxNgixCommand": "[concat('sudo apt-get -y install nginx && sudo systemctl enable nginx && sudo systemctl start nginx',' && ','echo \"<style> h1 { color: blue; } </style> <h1>\" > /var/www/html/index.nginx-debian.html', ' && ', 'cat /etc/hostname >> /var/www/html/index.nginx-debian.html', ' && ', 'echo \" </h1>\" >> /var/www/html/index.nginx-debian.html')]",
        "linuxCommand": "[concat( 'sleep 1m', ' &&', variables('linuxUpdate'), ' && ', variables('linuxNgixCommand') )]",
        "vmArray": [
            {
                "deployment": true,
                "resourceGroup": "[variables('vNethub').resourceGroup]",
                "location": "[variables('vNethub').location]",
                "vmName": "vmhub",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[variables('vNethub').name]",
                "subnetName": "[variables('vNethub').subnet1Name]",
                "pubIP": "[concat('vmhub','-pubIP')]",
                "nsgName": "[concat('vmhub','-nsg')]",
                "nicName": "[concat('vmhub','-NIC')]",
                "enableIPForwarding": true,
                "acceleratedNetworking": false,
                "commandToExecute": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "resourceGroup": "[variables('vNet1').resourceGroup]",
                "location": "[variables('vNet1').location]",
                "vmName": "vm1",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[variables('vNet1').name]",
                "subnetName": "[variables('vNet1').subnet1Name]",
                "pubIP": "[concat('vm1','-pubIP')]",
                "nsgName": "[concat('vm1','-nsg')]",
                "nicName": "[concat('vm1','-NIC')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "commandToExecute": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "resourceGroup": "[variables('vNet2').resourceGroup]",
                "location": "[variables('vNet2').location]",
                "vmName": "vm2",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[variables('vNet2').name]",
                "subnetName": "[variables('vNet2').subnet1Name]",
                "pubIP": "[concat('vm2','-pubIP')]",
                "nsgName": "[concat('vm2','-nsg')]",
                "nicName": "[concat('vm2','-NIC')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "commandToExecute": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "resourceGroup": "[variables('vNet3').resourceGroup]",
                "location": "[variables('vNet3').location]",
                "vmName": "vm3",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[variables('vNet3').name]",
                "subnetName": "[variables('vNet3').subnet1Name]",
                "pubIP": "[concat('vm3','-pubIP')]",
                "nsgName": "[concat('vm3','-nsg')]",
                "nicName": "[concat('vm3','-NIC')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "commandToExecute": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "resourceGroup": "[variables('vNet4').resourceGroup]",
                "location": "[variables('vNet4').location]",
                "vmName": "vm4",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[parameters('linux').publisher]",
                "offer": "[parameters('linux').offer]",
                "sku": "[parameters('linux').sku]",
                "vnetName": "[variables('vNet4').name]",
                "subnetName": "[variables('vNet4').subnet1Name]",
                "pubIP": "[concat('vm4','-pubIP')]",
                "nsgName": "[concat('vm4','-nsg')]",
                "nicName": "[concat('vm4','-NIC')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "commandToExecute": "[variables('linuxCommand')]"
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[concat('vnet-deployment', copyIndex())]",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[variables('vnetArray')[copyIndex()].resourceGroup]",
            "dependsOn": [
            ],
            "copy": {
                "name": "vnetCopy",
                "count": "[variables('vnetCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "name": "[variables('vnetArray')[copyIndex()].name]",
                            "apiVersion": "2023-04-01",
                            "location": "[variables('vnetArray')[copyIndex()].location]",
                            "comments": "create the vnet",
                            "tags": {
                                "Environment": "[variables('vnetArray')[copyIndex()].tag]"
                            },
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[variables('vnetArray')[copyIndex()].addressSpacePrefix]"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[variables('vnetArray')[copyIndex()].subnet1Name]",
                                        "properties": {
                                            "addressPrefix": "[variables('vnetArray')[copyIndex()].subnet1Prefix]"
                                        }
                                    },
                                    {
                                        "name": "[variables('vnetArray')[copyIndex()].subnet2Name]",
                                        "properties": {
                                            "addressPrefix": "[variables('vnetArray')[copyIndex()].subnet2Prefix]"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[concat('pubip-nsg-depl', copyIndex())]",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[variables('vmArray')[copyIndex()].resourceGroup]",
            "dependsOn": [
            ],
            "copy": {
                "name": "pubIPAndnsgCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "condition": "[variables('vmArray')[copyIndex()].deployment]",
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "name": "[variables('vmArray')[copyIndex()].nsgName]",
                            "apiVersion": "2023-04-01",
                            "location": "[concat(variables('vmArray')[copyIndex()].location)]",
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "SSH-rule",
                                        "properties": {
                                            "description": "allow SSH",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "22",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "VirtualNetwork",
                                            "access": "Allow",
                                            "priority": 500,
                                            "direction": "Inbound"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "condition": "[variables('vmArray')[copyIndex()].deployment]",
                            "type": "Microsoft.Network/publicIPAddresses",
                            "apiVersion": "2023-04-01",
                            "name": "[variables('vmArray')[copyIndex()].pubIP]",
                            "location": "[variables('vmArray')[copyIndex()].location]",
                            "sku": {
                                "name": "Standard",
                                "tier": "Regional"
                            },
                            "properties": {
                                "publicIPAllocationMethod": "Static",
                                "publicIPAddressVersion": "IPv4"
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[concat('nics-depl', copyIndex())]",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[variables('vmArray')[copyIndex()].resourceGroup]",
            "dependsOn": [
                "vnetCopy",
                "pubIPAndnsgCopy"
            ],
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Outer"
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "condition": "[variables('vmArray')[copyIndex()].deployment]",
                            "type": "Microsoft.Network/networkInterfaces",
                            "name": "[ variables('vmArray')[copyIndex()].nicName ]",
                            "apiVersion": "2023-04-01",
                            "location": "[variables('vmArray')[copyIndex()].location]",
                            "dependsOn": [],
                            "properties": {
                                "primary": true,
                                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]",
                                "enableAcceleratedNetworking": "[variables('vmArray')[copyIndex()].acceleratedNetworking]",
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Dynamic",
                                            "publicIPAddress": {
                                                "id": "[resourceId( variables('vmArray')[copyIndex()].resourceGroup, 'Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIP  )]"
                                            },
                                            "subnet": {
                                                "id": "[resourceId(variables('vmArray')[copyIndex()].resourceGroup, 'Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vnetName, variables('vmArray')[copyIndex()].subnetName)]"
                                            }
                                        }
                                    }
                                ],
                                "networkSecurityGroup": {
                                    "id": "[resourceId(variables('vmArray')[copyIndex()].resourceGroup,'Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName )]"
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[concat('vms-depl', copyIndex())]",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[variables('vmArray')[copyIndex()].resourceGroup]",
            "dependsOn": [
                "nicCopy"
            ],
            "copy": {
                "name": "vmsCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Outer"
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "condition": "[variables('vmArray')[copyIndex()].deployment]",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[variables('vmArray')[copyIndex()].vmName]",
                            "apiVersion": "2023-03-01",
                            "location": "[variables('vmArray')[copyIndex()].location]",
                            "dependsOn": [],
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                                },
                                "osProfile": {
                                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                                    "adminUsername": "[parameters('adminUsername')]",
                                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                                },
                                "storageProfile": {
                                    "imageReference": {
                                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                                        "version": "latest"
                                    },
                                    "osDisk": {
                                        "createOption": "FromImage",
                                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OsDisk')]",
                                        "managedDisk": {
                                            "storageAccountType": "[parameters('storageAccountType')]"
                                        }
                                    }
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "id": "[resourceId( variables('vmArray')[copyIndex()].resourceGroup, 'Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )  )]"
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[concat('vms-script-depl', copyIndex())]",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[variables('vmArray')[copyIndex()].resourceGroup]",
            "dependsOn": [
                "vmsCopy"
            ],
            "copy": {
                "name": "vmScriptCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Outer"
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "condition": "[variables('vmArray')[copyIndex()].deployment]",
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "name": "[concat(variables('vmArray')[copyIndex()].vmName, '/', 'installcustomscript')]",
                            "apiVersion": "2023-03-01",
                            "comments": "custom script extension for ubuntu",
                            "location": "[variables('vmArray')[copyIndex()].location]",
                            "dependsOn": [],
                            "properties": {
                                "publisher": "Microsoft.Azure.Extensions",
                                "type": "CustomScript",
                                "typeHandlerVersion": "2.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                    "commandToExecute": "[variables('vmArray')[copyIndex()].commandToExecute]"
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        }
    ]
}