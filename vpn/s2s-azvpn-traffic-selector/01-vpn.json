{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location1": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": {
        "description": "Azure region"
      }
    },
    "location2": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": {
        "description": "Azure region"
      }
    },
    "location3": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": {
        "description": "Azure region"
      }
    },

    "vnet1Name": {
      "type": "string",
      "defaultValue": "vnet1",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vnet2Name": {
      "type": "string",
      "defaultValue": "vnet2",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vnet3Name": {
      "type": "string",
      "defaultValue": "vnet3",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "gateway1PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw1IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway1"
      }
    },
    "gateway1PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw1IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway1"
      }
    },
    "gateway2PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw2IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway2"
      }
    },
    "gateway2PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw2IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway2"
      }
    },
    "gateway3PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw3IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway2"
      }
    },
    "gateway3PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw3IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway3"
      }
    },
    "gateway1Name": {
      "type": "string",
      "defaultValue": "vpnGw1",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gateway2Name": {
      "type": "string",
      "defaultValue": "vpnGw2",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gateway3Name": {
      "type": "string",
      "defaultValue": "vpnGw3",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gatewaySku": {
      "type": "string",
      "defaultValue": "VpnGw2AZ",
      "allowedValues": [
        "VpnGw2",
        "VpnGw2AZ",
        "VpnGw3",
        "VpnGw3AZ",
        "VpnGw4",
        "VpnGw4AZ",
        "VpnGw5",
        "VpnGw5AZ"
      ],
      "metadata": {
        "description": "The Sku of the Gateway"
      }
    },
    "vm1Name": {
      "type": "string",
      "defaultValue": "vm1",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vm2Name": {
      "type": "string",
      "defaultValue": "vm2",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vm3Name": {
      "type": "string",
      "defaultValue": "vm3",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "linux": {
      "type": "object",
      "defaultValue": {
        "publisher": "canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts-gen2"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for sample VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "User password for sample VM"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The storage account type for the disks of the VM"
      }
    }
  },
  "variables": {
    "vnet1": {
      "location": "[parameters('location1')]",
      "name": "[parameters('vnet1Name')]",
      "addressPrefix": "10.0.0.0/23",
      "subnet1Name": "subnet11",
      "subnet1Prefix": "10.0.1.0/27",
      "azfirewallName": "AzureFirewallSubnet",
      "azfirewallPrefix": "10.0.1.128/26",
      "gatewaySubnetName": "GatewaySubnet",
      "gatewaySubnetPrefix": "10.0.1.224/27"
    },
    "vnet2": {
      "location": "[parameters('location2')]",
      "name": "[parameters('vnet2Name')]",
      "addressPrefix": "10.0.2.0/24",
      "subnet1Name": "subnet21",
      "subnet1Prefix": "10.0.2.0/27",
      "gatewaySubnetName": "GatewaySubnet",
      "gatewaySubnetPrefix": "10.0.2.224/27"
    },
    "vnet3": {
      "location": "[parameters('location3')]",
      "name": "[parameters('vnet3Name')]",
      "addressPrefix": "10.0.3.0/24",
      "subnet1Name": "subnet31",
      "subnet1Prefix": "10.0.3.0/27",
      "gatewaySubnetName": "GatewaySubnet",
      "gatewaySubnetPrefix": "10.0.3.224/27"
    },
    "gateway1subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet1').name,'GatewaySubnet') ]",
    "gateway2subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet2').name,'GatewaySubnet') ]",
    "gateway3subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet3').name,'GatewaySubnet') ]",
    "gateway1Name": "[parameters('gateway1Name')]",
    "gateway2Name": "[parameters('gateway2Name')]",
    "gateway3Name": "[parameters('gateway3Name')]",
    "gateway1PublicIP1Name": "[parameters('gateway1PublicIP1Name')]",
    "gateway1PublicIP2Name": "[parameters('gateway1PublicIP2Name')]",
    "gateway2PublicIP1Name": "[parameters('gateway2PublicIP1Name')]",
    "gateway2PublicIP2Name": "[parameters('gateway2PublicIP2Name')]",
    "gateway3PublicIP1Name": "[parameters('gateway3PublicIP1Name')]",
    "gateway3PublicIP2Name": "[parameters('gateway3PublicIP2Name')]",


    "linuxUpdate": "sudo apt update",
    "linuxNgixCommand": "[concat('sudo apt-get -y install nginx && sudo systemctl enable nginx && sudo systemctl start nginx',' && ','echo \"<style> h1 { color: blue; } </style> <h1>\" > /var/www/html/index.nginx-debian.html', ' && ', 'cat /etc/hostname >> /var/www/html/index.nginx-debian.html', ' && ', 'echo \" </h1>\" >> /var/www/html/index.nginx-debian.html')]",
    "linuxCommand": "[concat( 'sleep 1m', ' &&', variables('linuxUpdate'), ' && ', variables('linuxNgixCommand'))]",
    "vm1Name": "[parameters('vm1Name')]",
    "vm2Name": "[parameters('vm2Name')]",
    "vm3Name": "[parameters('vm3Name')]",
    "vm1IpAddresses": "10.0.1.10",
    "vm2IpAddresses": "10.0.2.10",
    "vm3IpAddresses": "10.0.3.10",
    "vmArray": [
      {
        "location": "[variables('vnet1').location]",
        "vmName": "[variables('vm1Name')]",
        "vmSize": "Standard_B1s",
        "publisher": "[parameters('linux').publisher]",
        "offer": "[parameters('linux').offer]",
        "sku": "[parameters('linux').sku]",
        "vnetName": "[variables('vnet1').name]",
        "subnetName": "[variables('vnet1').subnet1Name]",
        "nicName": "[concat(variables('vm1Name'),'-nic')]",
        "privateIP": "[variables('vm1IpAddresses')]",
        "enableIPForwarding": "false",
        "nsgName": "[concat(variables('vm1Name'),'-nsg')]",
        "pubIP": "[concat(variables('vm1Name'),'-pubIP')]",
        "commandToExecute": "[variables('linuxCommand')]"
      },
      {
        "location": "[variables('vnet2').location]",
        "vmName": "[variables('vm2Name')]",
        "vmSize": "Standard_B1s",
        "publisher": "[parameters('linux').publisher]",
        "offer": "[parameters('linux').offer]",
        "sku": "[parameters('linux').sku]",
        "vnetName": "[variables('vnet2').name]",
        "subnetName": "[variables('vnet2').subnet1Name]",
        "nicName": "[concat(variables('vm2Name'),'-nic')]",
        "privateIP": "[variables('vm2IpAddresses')]",
        "enableIPForwarding": "false",
        "nsgName": "[concat(variables('vm2Name'),'-nsg')]",
        "pubIP": "[concat(variables('vm2Name'),'-pubIP')]",
        "commandToExecute": "[variables('linuxCommand')]"
      },
      {
        "location": "[variables('vnet3').location]",
        "vmName": "[variables('vm3Name')]",
        "vmSize": "Standard_B1s",
        "publisher": "[parameters('linux').publisher]",
        "offer": "[parameters('linux').offer]",
        "sku": "[parameters('linux').sku]",
        "vnetName": "[variables('vnet3').name]",
        "subnetName": "[variables('vnet3').subnet1Name]",
        "nicName": "[concat(variables('vm3Name'),'-nic')]",
        "privateIP": "[variables('vm3IpAddresses')]",
        "enableIPForwarding": "false",
        "nsgName": "[concat(variables('vm3Name'),'-nsg')]",
        "pubIP": "[concat(variables('vm3Name'),'-pubIP')]",
        "commandToExecute": "[variables('linuxCommand')]"
      }
    ],
    "vmCount": "[length(variables('vmArray'))]",
    "vmStorageAccountType": "[parameters('storageAccountType')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet1').name]",
      "apiVersion": "2022-05-01",
      "location": "[variables('vnet1').location]",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet1').addressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet1').subnet1Name]",
            "properties": {
              "addressPrefix": "[variables('vnet1').subnet1Prefix]"
            }
          },
          {
            "name": "AzureFirewallSubnet",
            "properties": {
              "addressPrefix": "[variables('vnet1').azfirewallPrefix]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('vnet1').gatewaySubnetPrefix]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet2').name]",
      "apiVersion": "2022-05-01",
      "location": "[variables('vnet2').location]",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet2').addressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet2').subnet1Name]",
            "properties": {
              "addressPrefix": "[variables('vnet2').subnet1Prefix]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('vnet2').gatewaySubnetPrefix]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet3').name]",
      "apiVersion": "2022-05-01",
      "location": "[variables('vnet3').location]",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet3').addressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet3').subnet1Name]",
            "properties": {
              "addressPrefix": "[variables('vnet3').subnet1Prefix ]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('vnet3').gatewaySubnetPrefix]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP1Name')]",
      "apiVersion": "2022-05-01",
      "comments": "public IP of the VPN Gateway1-instance 0",
      "location": "[variables('vnet1').location]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "zones": [ "1", "2", "3" ],
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP1Name')]",
      "apiVersion": "2022-05-01",
      "comments": "public IP of the VPN Gateway2-instance 0",
      "location": "[variables('vnet2').location]",
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway3PublicIP1Name')]",
      "apiVersion": "2022-05-01",
      "comments": "public IP of the VPN Gateway3-instance 0",
      "location": "[variables('vnet3').location]",
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP2Name')]",
      "apiVersion": "2022-05-01",
      "comments": "public IP of the VPN Gateway1- instance 1",
      "location": "[variables('vnet1').location]",
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP2Name')]",
      "apiVersion": "2022-05-01",
      "comments": "public IP of the VPN Gateway2- instance 1",
      "location": "[variables('vnet2').location]",
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway3PublicIP2Name')]",
      "apiVersion": "2022-05-01",
      "comments": "public IP of the VPN Gateway3- instance 1",
      "location": "[variables('vnet3').location]",
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway1Name')]",
      "apiVersion": "2022-05-01",
      "location": "[variables('vnet1').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1').name)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway1Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway1Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway2Name')]",
      "apiVersion": "2022-05-01",
      "location": "[variables('vnet2').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2').name)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway2Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway2Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway3Name')]",
      "apiVersion": "2022-05-01",
      "location": "[variables('vnet3').location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway3PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway3PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet3').name)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway3SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway3PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway3Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway3SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway3PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway3Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-05-01",
      "name": "[variables('vmArray')[copyIndex()].nsgName]",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          }
        ]
      },
      "copy": {
        "name": "nsgCopy",
        "count": "[variables('vmCount')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat( variables('vmArray')[copyIndex()].pubIP )]",
      "apiVersion": "2022-05-01",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "copy": {
        "name": "pubIPCopy",
        "count": "[variables('vmCount')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vmArray')[copyIndex()].nicName]",
      "apiVersion": "2022-05-01",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks',variables('vmArray')[copyIndex()].vnetName) ]",
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIP) ]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmArray')[copyIndex()].nsgName )]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
              "subnet": {
                "id": "[resourceId( 'Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vnetName, variables('vmArray')[copyIndex()].subnetName)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIP) ]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmArray')[copyIndex()].nsgName )]"
        },
        "primary": true,
        "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]"
      },
      "copy": {
        "name": "nicCopy",
        "count": "[variables('vmCount')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmArray')[copyIndex()].vmName]",
      "apiVersion": "2022-11-01",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArray')[copyIndex()].nicName )]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
        },
        "osProfile": {
          "computerName": "[variables('vmArray')[copyIndex()].vmName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmArray')[copyIndex()].publisher]",
            "offer": "[variables('vmArray')[copyIndex()].offer]",
            "sku": "[variables('vmArray')[copyIndex()].sku]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[variables('vmStorageAccountType')]"
            },
            "name": "[concat(variables('vmArray')[copyIndex()].vmName, '-OSdisk')]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',  variables('vmArray')[copyIndex()].nicName)]"
            }
          ]
        }
      },
      "copy": {
        "name": "nodeCopy",
        "count": "[variables('vmCount')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmArray')[copyIndex()].vmName, '/', 'installcustomscript')]",
      "apiVersion": "2022-11-01",
      "comments": "custom script extension for ubuntu",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "copy": {
        "name": "nodeCopy",
        "count": "[variables('vmCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmArray')[copyIndex()].vmName )]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "[variables('vmArray')[copyIndex()].commandToExecute]"
        }
      }
    }
  ]
}