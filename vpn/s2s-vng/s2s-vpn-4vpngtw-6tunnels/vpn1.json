{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location1": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure region"
      }
    },
    "location2": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure region"
      }
    },
    "location3": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure region"
      }
    },
    "location4": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure region"
      }
    },
    "vNet1Name": {
      "type": "string",
      "defaultValue": "vnet1",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vNet2Name": {
      "type": "string",
      "defaultValue": "vnet2",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vNet3Name": {
      "type": "string",
      "defaultValue": "vnet3",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vNet4Name": {
      "type": "string",
      "defaultValue": "vnet4",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vNet1AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.10.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "vNet2AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.20.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "vNet3AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.30.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "vNet4AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.40.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "subnet1",
      "metadata": {
        "description": "Arbitrary name for the Azure Subnet"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "subnet2",
      "metadata": {
        "description": "Arbitrary name for the Azure Subnet"
      }
    },
    "subnet3Name": {
      "type": "string",
      "defaultValue": "subnet3",
      "metadata": {
        "description": "Arbitrary name for the Azure Subnet"
      }
    },
    "subnet4Name": {
      "type": "string",
      "defaultValue": "subnet4",
      "metadata": {
        "description": "Arbitrary name for the Azure Subnet"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.10.0/27",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of vNet1AddressPrefix address space"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.0.20.0/27",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of vNet2AddressPrefix address space"
      }
    },
    "subnet3Prefix": {
      "type": "string",
      "defaultValue": "10.0.30.0/27",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of vNet2AddressPrefix address space"
      }
    },
    "subnet4Prefix": {
      "type": "string",
      "defaultValue": "10.0.40.0/27",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of vNet2AddressPrefix address space"
      }
    },
    "gateway1subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.10.224/27",
      "metadata": {
        "description": "CIDR block for gateway subnet, subset of vNet1AddressPrefix address space"
      }
    },
    "gateway2subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.20.224/27",
      "metadata": {
        "description": "CIDR block for gateway subnet, subset of vNet2AddressPrefix address space"
      }
    },
    "gateway3subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.30.224/27",
      "metadata": {
        "description": "CIDR block for gateway subnet, subset of vNet3AddressPrefix address space"
      }
    },
    "gateway4subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.40.224/27",
      "metadata": {
        "description": "CIDR block for gateway subnet, subset of vNet4AddressPrefix address space"
      }
    },
    "gateway1PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw1IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway1"
      }
    },
    "gateway1PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw1IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway1"
      }
    },
    "gateway2PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw2IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway2"
      }
    },
    "gateway2PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw2IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway2"
      }
    },
    "gateway3PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw3IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway3"
      }
    },
    "gateway3PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw3IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway3"
      }
    },
    "gateway4PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw4IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway4"
      }
    },
    "gateway4PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw4IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway4"
      }
    },
    "gateway1Name": {
      "type": "string",
      "defaultValue": "vpnGw1",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gateway2Name": {
      "type": "string",
      "defaultValue": "vpnGw2",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gateway3Name": {
      "type": "string",
      "defaultValue": "vpnGw3",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gateway4Name": {
      "type": "string",
      "defaultValue": "vpnGw4",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gatewaySku": {
      "type": "string",
      "defaultValue": "VpnGw5",
      "allowedValues": [
        "VpnGw2",
        "VpnGw2AZ",
        "VpnGw3",
        "VpnGw3AZ",
        "VpnGw4",
        "VpnGw4AZ",
        "VpnGw5",
        "VpnGw5AZ"
      ],
      "metadata": {
        "description": "The Sku of the Gateway"
      }
    },
    "asnGtw1": {
      "type": "int",
      "defaultValue": 65010,
      "metadata": {
        "description": "BGP Autonomous System Number of the VNet"
      }
    },
    "asnGtw2": {
      "type": "int",
      "defaultValue": 65020,
      "metadata": {
        "description": "BGP Autonomous System Number of the remote VNet"
      }
    },
    "asnGtw3": {
      "type": "int",
      "defaultValue": 65030,
      "metadata": {
        "description": "BGP Autonomous System Number of the remote VNet"
      }
    },
    "asnGtw4": {
      "type": "int",
      "defaultValue": 65040,
      "metadata": {
        "description": "BGP Autonomous System Number of the remote VNet"
      }
    },
    "vm1Name": {
      "type": "string",
      "defaultValue": "vm1",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vm2Name": {
      "type": "string",
      "defaultValue": "vm2",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vm3Name": {
      "type": "string",
      "defaultValue": "vm3",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vm4Name": {
      "type": "string",
      "defaultValue": "vm4",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS5_v2",
      "allowedValues": [
        "Standard_B1ls",
        "Standard_B1s",
        "Standard_DS1_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "Size of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for sample VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "User password for sample VM"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The storage account type for the disks of the VM"
      }
    }
  },
  "variables": {
    "location1": "[parameters('location1')]",
    "location2": "[parameters('location2')]",
    "location3": "[parameters('location3')]",
    "location4": "[parameters('location4')]",
    "vNet1Name": "[parameters('vNet1Name')]",
    "vNet2Name": "[parameters('vNet2Name')]",
    "vNet3Name": "[parameters('vNet3Name')]",
    "vNet4Name": "[parameters('vNet4Name')]",
    "subnet1Name": "[parameters('subnet1Name')]",
    "subnet2Name": "[parameters('subnet2Name')]",
    "subnet3Name": "[parameters('subnet3Name')]",
    "subnet4Name": "[parameters('subnet4Name')]",
    "vNet1AddressPrefix": "[parameters('vNet1AddressPrefix')]",
    "vNet2AddressPrefix": "[parameters('vNet2AddressPrefix')]",
    "vNet3AddressPrefix": "[parameters('vNet3AddressPrefix')]",
    "vNet4AddressPrefix": "[parameters('vNet4AddressPrefix')]",
    "subnet1Prefix": "[parameters('subnet1Prefix')]",
    "subnet2Prefix": "[parameters('subnet2Prefix')]",
    "subnet3Prefix": "[parameters('subnet3Prefix')]",
    "subnet4Prefix": "[parameters('subnet4Prefix')]",
    "gateway1SubnetPrefix": "[parameters('gateway1SubnetPrefix')]",
    "gateway2SubnetPrefix": "[parameters('gateway2SubnetPrefix')]",
    "gateway3SubnetPrefix": "[parameters('gateway3SubnetPrefix')]",
    "gateway4SubnetPrefix": "[parameters('gateway4SubnetPrefix')]",
    "vnet1ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]",
    "vnet2ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]",
    "vnet3ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet3Name'))]",
    "vnet4ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet4Name'))]",
    "gateway1subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'),'GatewaySubnet') ]",
    "gateway2subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'),'GatewaySubnet') ]",
    "gateway3subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet3Name'),'GatewaySubnet') ]",
    "gateway4subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet4Name'),'GatewaySubnet') ]",
    "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'), variables('subnet1Name') )]",
    "subnet2Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'), variables('subnet2Name') )]",
    "subnet3Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet3Name'), variables('subnet3Name') )]",
    "subnet4Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet4Name'), variables('subnet4Name') )]",
    "gateway1Name": "[parameters('gateway1Name')]",
    "gateway2Name": "[parameters('gateway2Name')]",
    "gateway3Name": "[parameters('gateway3Name')]",
    "gateway4Name": "[parameters('gateway4Name')]",
    "gateway1PublicIP1Name": "[parameters('gateway1PublicIP1Name')]",
    "gateway1PublicIP2Name": "[parameters('gateway1PublicIP2Name')]",
    "gateway2PublicIP1Name": "[parameters('gateway2PublicIP1Name')]",
    "gateway2PublicIP2Name": "[parameters('gateway2PublicIP2Name')]",
    "gateway3PublicIP1Name": "[parameters('gateway3PublicIP1Name')]",
    "gateway3PublicIP2Name": "[parameters('gateway3PublicIP2Name')]",
    "gateway4PublicIP1Name": "[parameters('gateway4PublicIP1Name')]",
    "gateway4PublicIP2Name": "[parameters('gateway4PublicIP2Name')]",
    "asnGtw1": "[parameters('asnGtw1')]",
    "asnGtw2": "[parameters('asnGtw2')]",
    "asnGtw3": "[parameters('asnGtw3')]",
    "asnGtw4": "[parameters('asnGtw4')]",
    "vm1Name": "[parameters('vm1Name')]",
    "vm2Name": "[parameters('vm2Name')]",
    "vm3Name": "[parameters('vm3Name')]",
    "vm4Name": "[parameters('vm4Name')]",
    "nsg1": "nsg1",
    "nsg2": "nsg2",
    "nsg3": "nsg3",
    "nsg4": "nsg4",
    "nic1Name": "[concat(variables('vm1Name'), '-nic')]",
    "nic2Name": "[concat(variables('vm2Name'), '-nic')]",
    "nic3Name": "[concat(variables('vm3Name'), '-nic')]",
    "nic4Name": "[concat(variables('vm4Name'), '-nic')]",
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS",
    "imageSKU": "7.6",
    "OSDiskName": "osDisk",
    "vm1PublicIPName": "[concat(variables('vm1Name'), '-pubIP')]",
    "vm2PublicIPName": "[concat(variables('vm2Name'), '-pubIP')]",
    "vm3PublicIPName": "[concat(variables('vm3Name'), '-pubIP')]",
    "vm4PublicIPName": "[concat(variables('vm4Name'), '-pubIP')]",
    "vmSize": "[parameters('vmSize')]",
    "storageAccountType": "[parameters('storageAccountType')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg1')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg2')]",
      "location": "[variables('location2')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg3')]",
      "location": "[variables('location3')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg4')]",
      "location": "[variables('location4')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet1Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet1AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1'))]"
              }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway1subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet2Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet2AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2'))]"
              }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway2subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet3Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location3')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg3'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet3AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet3Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet3Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg3'))]"
              }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway3subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet4Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location4')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg4'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet4AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet4Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet4Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg4'))]"
              }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway4subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP1Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway1-instance 0",
      "location": "[variables('location1')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP2Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway1- instance 1",
      "location": "[variables('location1')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP1Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway2-instance 0",
      "location": "[variables('location2')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP2Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway2- instance 1",
      "location": "[variables('location2')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway3PublicIP1Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway2-instance 0",
      "location": "[variables('location3')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway3PublicIP2Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway3- instance 1",
      "location": "[variables('location3')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },


    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway4PublicIP1Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway4-instance 0",
      "location": "[variables('location4')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway4PublicIP2Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway4- instance 1",
      "location": "[variables('location4')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },

    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway1Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway1Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway1Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2",
        "bgpSettings": {
          "asn": "[variables('asnGtw1')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway2Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway2Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway2Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2",
        "bgpSettings": {
          "asn": "[variables('asnGtw2')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway3Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location3')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway3PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway3PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet3Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway3SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway3PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway3Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway3SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway3PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway3Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2",
        "bgpSettings": {
          "asn": "[variables('asnGtw3')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway4Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location4')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway4PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway4PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet4Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway4SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway4PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway4Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway4SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway4PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway4Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2",
        "bgpSettings": {
          "asn": "[variables('asnGtw4')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm1PublicIPName')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm2PublicIPName')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm3PublicIPName')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location3')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm4PublicIPName')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location4')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic1Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm1PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic2Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm2PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm2PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic3Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location3')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm3PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet3Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm3PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet3Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic4Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location4')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm4PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet4Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig4",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm4PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet4Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm1Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vm1Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic1Name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm2Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vm2Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic2Name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm3Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location3')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic3Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm3Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vm3Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic3Name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm4Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location4')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic4Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm4Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vm4Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic4Name'))]"
            }
          ]
        }
      }
    }
  ]
}