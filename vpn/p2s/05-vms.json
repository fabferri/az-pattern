{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location1": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "azure region where is deployed the vnet"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "admin password for the VMs"
      }
    },
    "linux": {
      "type": "object",
      "defaultValue": {
        "publisher": "canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts-gen2",
        "version": "latest"
      }
    },
    "windows": {
      "type": "object",
      "defaultValue": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2022-Datacenter",
        "version": "latest"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "allowedValues": [
        "Standard_B1s",
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_D2as_v5",
        "Standard_D2s_v5",
        "Standard_F4s_v2"
      ],
      "metadata": {
        "description": "Size of VM"
      }
    }
  },
  "variables": {
    "vnet1": {
      "location": "[parameters('location1')]",
      "name": "vnet-gtw",
      "addressSpace1Prefix": "10.0.0.0/24",
      "subnet1Name": "subnet1",
      "subnet1Prefix": "10.0.0.0/27",
      "subnet2Name": "subnet2",
      "subnet2Prefix": "10.0.0.32/27",
      "subnet3Name": "subnet3",
      "subnet3Prefix": "10.0.0.64/27",
      "GatewaySubnetName": "GatewaySubnet",
      "GatewaySubnetPrefix": "10.0.0.192/26"
    },
    "adminUsername": "[parameters('adminUsername')]",
    "adminPassword": "[parameters('adminPassword')]",
    "vm11Name": "vm11",
    "vm11privIP": "10.0.0.10",
    "vm12Name": "vm12",
    "vm12privIP": "10.0.0.40",
    "vm13Name": "vm13",
    "vm13privIP": "10.0.0.80",
    "vmarray": [
      {
        "deployment": true,
        "vmName": "[variables('vm11Name')]",
        "location": "[variables('vnet1').location]",
        "vmSize": "[parameters('vmSize')]",
        "imagePublisher": "[parameters('linux').publisher ]",
        "imageOffer": "[parameters('linux').offer]",
        "sku": "[parameters('linux').sku]",
        "version": "[parameters('linux').version]",
        "vnetName": "[variables('vnet1').name]",
        "subnetName": "[variables('vnet1').subnet1Name]",
        "nic1Name": "[format('{0}-nic1', variables('vm11Name'))]",
        "pubIPName": "[format('{0}-pubIP', variables('vm11Name'))]",
        "pipObject": {
          "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',format('{0}-pubIP', variables('vm11Name'))  )]"
        },
        "nsgName": "[format('{0}-nsg', variables('vm11Name'))]",
        "ipforwarding": false,
        "ipconfigs": [
          {
            "name": "ipconfig1",
            "properties": {
              "primary": true,
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('vm11privIP')]",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet1').name, variables('vnet1').subnet1Name)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pubIP', variables('vm11Name')) ) ]"
              }
            }
          }
        ],
        "commandToExecute": "[variables('linuxCommand')]"
      },
      {
        "deployment": false,
        "vmName": "[variables('vm12Name')]",
        "location": "[variables('vnet1').location]",
        "vmSize": "[parameters('vmsize')]",
        "imagePublisher": "[parameters('linux').publisher ]",
        "imageOffer": "[parameters('linux').offer]",
        "sku": "[parameters('linux').sku]",
        "version": "[parameters('linux').version]",
        "vnetName": "[variables('vnet1').name]",
        "subnetName": "[variables('vnet1').subnet1Name]",
        "nic1Name": "[format('{0}-nic1', variables('vm12Name'))]",
        "pubIPName": "[format('{0}-pubIP', variables('vm12Name'))]",
        "pipObject": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet1').name, variables('vnet1').subnet2Name)]"
        },
        "nsgName": "[format('{0}-nsg', variables('vm12Name'))]",
        "ipforwarding": false,
        "ipconfigs": [
          {
            "name": "ipconfig1",
            "properties": {
              "primary": true,
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('vm12privIP')]",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet1').name, variables('vnet1').subnet2Name)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pubIP', variables('vm12Name')) ) ]"
              }
            }
          }
        ],
        "commandToExecute": "[variables('linuxCommand')]"
      }
    ],
    "vmCount": "[length(variables('vmArray'))]",
    "linuxUpdate": "sudo apt update",
    "linuxNgixCommand": "[concat('sudo apt-get -y install nginx && sudo systemctl enable nginx && sudo systemctl start nginx',' && ','echo \"<style> h1 { color: blue; } </style> <h1>\" > /var/www/html/index.nginx-debian.html', ' && ', 'cat /etc/hostname >> /var/www/html/index.nginx-debian.html', ' && ', 'echo \" </h1>\" >> /var/www/html/index.nginx-debian.html')]",
    "linuxCommand": "[concat( 'sleep 1m', ' &&', variables('linuxUpdate'), ' && ', variables('linuxNgixCommand') )]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet1').name]",
      "apiVersion": "2022-11-01",
      "location": "[variables('vnet1').location]",
      "dependsOn": [],
      "comments": "create vnet1",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet1').addressSpace1Prefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet1').subnet1Name]",
            "properties": {
              "addressPrefix": "[variables('vnet1').subnet1Prefix]"
            }
          },
          {
            "name": "[variables('vnet1').subnet2Name]",
            "properties": {
              "addressPrefix": "[variables('vnet1').subnet2Prefix]"
            }
          },
          {
            "name": "[variables('vnet1').subnet3Name]",
            "properties": {
              "addressPrefix": "[variables('vnet1').subnet3Prefix]"
            }
          },
          {
            "name": "[variables('vnet1').GatewaySubnetName]",
            "properties": {
              "addressPrefix": "[variables('vnet1').GatewaySubnetPrefix]"
            }
          }
        ]
      }
    },
   
    {
      // "condition": "[and(variables('vmArray')[copyIndex()].deployment, greater(length(variables('vmArray')[copyIndex()].pipObject), 0))]",
      "condition": "[and(variables('vmArray')[copyIndex()].deployment, if(empty(variables('vmArray')[copyIndex()].pipObject), false(), true()) ) ]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-11-01",
      "name": "[variables('vmArray')[copyIndex()].pubIPName]",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "deleteOption": "Delete",
        "publicIPAddressVersion": "IPv4"
      },
      "copy": {
        "name": "publicIpCopy",
        "count": "[variables('vmCount')]"
      }
    },
    {
      "condition": "[variables('vmArray')[copyIndex()].deployment ]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[ variables('vmArray')[copyIndex()].nsgName ]",
      "apiVersion": "2022-11-01",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 400,
              "direction": "Inbound"
            }
          }
        ]
      },
      "copy": {
        "name": "nsgCopy",
        "count": "[variables('vmCount')]"
      }
    },
    {
      "condition": "[variables('vmArray')[copyIndex()].deployment ]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[ variables('vmArray')[copyIndex()].nic1Name ]",
      "apiVersion": "2022-11-01",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "comments": "NIC of the VMs",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmArray')[copyIndex()].pubIPName )  ]",
        "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName)]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vmArray')[copyIndex()].vnetName)]"
      ],
      "properties": {
        "ipConfigurations": "[variables('vmArray')[copyIndex()].ipconfigs]",
        "enableIPForwarding": "[variables('vmArray')[copyIndex()].ipforwarding]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName)]"
        }
      },
      "copy": {
        "name": "nicCopy",
        "count": "[variables('vmCount')]"
      }
    },
    {
      "condition": "[variables('vmArray')[copyIndex()].deployment ]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmArray')[copyIndex()].vmName]",
      "apiVersion": "2023-03-01",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArray')[copyIndex()].nic1Name  )]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
        },
        "osProfile": {
          "computerName": "[variables('vmArray')[copyIndex()].vmName]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmArray')[copyIndex()].imagePublisher]",
            "offer": "[variables('vmArray')[copyIndex()].imageOffer]",
            "sku": "[variables('vmArray')[copyIndex()].sku]",
            "version": "[variables('vmArray')[copyIndex()].version]"
          },
          "osDisk": {
            "createOption": "FromImage",
            "name": "[format('{0}-OS', variables('vmArray')[copyIndex()].vmName)]",
            "caching": "ReadWrite",
            "deleteOption": "Delete"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',  variables('vmArray')[copyIndex()].nic1Name )]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      },
      "copy": {
        "name": "nodeCopy",
        "count": "[variables('vmCount')]"
      }
    },
    {
      "condition": "[variables('vmArray')[copyIndex()].deployment]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmArray')[copyIndex()].vmName, '/', 'installcustomscript')]",
      "apiVersion": "2023-03-01",
      "comments": "custom script extension for ubuntu",
      "location": "[variables('vmArray')[copyIndex()].location]",
      "copy": {
        "name": "nodeCopy",
        "count": "[variables('vmCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmArray')[copyIndex()].vmName )]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "[variables('vmArray')[copyIndex()].commandToExecute]"
        }
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "adminPassword": {
      "type": "securestring",
      "value": "[parameters('adminPassword')]"
    }
  }
}