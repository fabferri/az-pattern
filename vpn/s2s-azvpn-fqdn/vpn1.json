{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "naming prefix"
      }
    },
    "location1": {
      "type": "string",
      "allowedValues": [
        "canadacentral",
        "francecentral",
        "germanywestcentral",
        "japaneast",
        "centralus",
        "northeurope",
        "southeastasia",
        "eastus",
        "uksouth",
        "australiaeast",
        "eastus2",
        "westeurope",
        "southcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Azure region with Availability Zone"
      }
    },
    "location2": {
      "type": "string",
      "allowedValues": [
        "canadacentral",
        "francecentral",
        "germanywestcentral",
        "japaneast",
        "centralus",
        "northeurope",
        "southeastasia",
        "eastus",
        "uksouth",
        "australiaeast",
        "eastus2",
        "westeurope",
        "southcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Azure region with Availability Zone"
      }
    },
    "vNet1Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'vnet1')]",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network 1"
      }
    },
    "vNet2Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'vnet2')]",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network 2"
      }
    },
    "vNet1AddressPrefix": {
      "type": "string",
      "defaultValue": "10.100.0.0/16",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet 1"
      }
    },
    "vNet2AddressPrefix": {
      "type": "string",
      "defaultValue": "10.200.0.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet 2"
      }
    },
    "subnet11Name": {
      "type": "string",
      "defaultValue": "subnet11",
      "metadata": {
        "description": "Arbitrary name for the Azure subnet1 in VNet1"
      }
    },
    "subnet12Name": {
      "type": "string",
      "defaultValue": "subnet12",
      "metadata": {
        "description": "Arbitrary name for the Azure subnet2 in VNet1"
      }
    },
    "subnet21Name": {
      "type": "string",
      "defaultValue": "subnet21",
      "metadata": {
        "description": "Arbitrary name for the Azure subnet1 in VNet2"
      }
    },
    "subnet22Name": {
      "type": "string",
      "defaultValue": "subnet22",
      "metadata": {
        "description": "Arbitrary name for the Azure subnet2 in VNet2"
      }
    },
    "subnet11Prefix": {
      "type": "string",
      "defaultValue": "10.100.1.0/24",
      "metadata": {
        "description": "CIDR block for subnet1 in VNet1- it is a subset of vNet1AddressPrefix address space"
      }
    },
    "subnet12Prefix": {
      "type": "string",
      "defaultValue": "10.100.2.0/24",
      "metadata": {
        "description": "CIDR block for subnet2 in VNet1- it is a subset of vNet1AddressPrefix address space"
      }
    },
    "gateway1subnetPrefix": {
      "type": "string",
      "defaultValue": "10.100.3.0/24",
      "metadata": {
        "description": "CIDR block for gateway subnet- it is a subset of vNet1AddressPrefix address space"
      }
    },
    "subnet21Prefix": {
      "type": "string",
      "defaultValue": "10.200.0.0/26",
      "metadata": {
        "description": "CIDR block for subnet1 in VNet2- it is a subset of vNet2AddressPrefix address space"
      }
    },
    "subnet22Prefix": {
      "type": "string",
      "defaultValue": "10.200.0.64/26",
      "metadata": {
        "description": "CIDR block for subnet2 in VNet2- it is a subset of vNet2AddressPrefix address space"
      }
    },
    "gateway2subnetPrefix": {
      "type": "string",
      "defaultValue": "10.200.0.224/27",
      "metadata": {
        "description": "CIDR block for gateway subnet- it is a subset of vNet2AddressPrefix address space"
      }
    },
    "gateway1PublicIP1Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'vpnGw1IP1')]",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway1"
      }
    },
    "gateway1PublicIP2Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'vpnGw1IP2')]",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway1"
      }
    },
    "gateway2PublicIP1Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'vpnGw2IP1')]",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway2"
      }
    },
    "gateway2PublicIP2Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'vpnGw2IP2')]",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway2"
      }
    },
    "gateway1Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'vpnGw1')]",
      "metadata": {
        "description": "Arbitrary name for the new gateway1"
      }
    },
    "gateway2Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'vpnGw2')]",
      "metadata": {
        "description": "Arbitrary name for the new gateway2"
      }
    },
    "gatewaySku": {
      "type": "string",
      "defaultValue": "VpnGw2AZ",
      "allowedValues": [
        "VpnGw1",
        "VpnGw2",
        "VpnGw2AZ",
        "VpnGw3",
        "VpnGw3AZ",
        "VpnGw4",
        "VpnGw4AZ",
        "VpnGw5",
        "VpnGw5AZ"
      ],
      "metadata": {
        "description": "The Sku of the Gateway"
      }
    },
    "vpnGatewayGeneration": {
      "type": "string",
      "defaultValue": "Generation2",
      "allowedValues": [
        "Generation1",
        "Generation2"
      ]
    },
    "asnGtw1": {
      "type": "int",
      "defaultValue": 65001,
      "metadata": {
        "description": "BGP Autonomous System Number of the VPN Gateway1 in VNet1"
      }
    },
    "asnGtw2": {
      "type": "int",
      "defaultValue": 65002,
      "metadata": {
        "description": "BGP Autonomous System Number of the VPN Gateway2 in VNet2"
      }
    },
    "vm1Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'vm1')]",
      "metadata": {
        "description": "name of the VM in subnet1 in VNet1"
      }
    },
    "vm2Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'vm2')]",
      "metadata": {
        "description": "name of the VM in subnet1 in VNet2"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "allowedValues": [
        "Standard_B1ls",
        "Standard_B1s",
        "Standard_DS1_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "Size of the Virtual Machine"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "administrator username of the VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "administrator password of the VMs"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The storage account type for the disks of the VMs"
      }
    },
    "dnsLabelgtw1PubIP1": {
      "type": "string",
      "defaultValue": "[toLower( concat( 'gtw1-ip1-', substring(uniqueString(resourceGroup().id), 0, 4)  ))]",
      "metadata": {
        "description": "dns gateway 1- public IP1"
      }
    },
    "dnsLabelgtw1PubIP2": {
      "type": "string",
      "defaultValue": "[toLower( concat( 'gtw1-ip2-', substring(uniqueString(resourceGroup().id), 0, 4)  ))]",
      "metadata": {
        "description": "dns gateway 1- public IP2"
      }
    },
    "dnsLabelgtw2PubIP1": {
      "type": "string",
      "defaultValue": "[toLower( concat( 'gtw2-ip1-', substring(uniqueString(resourceGroup().id), 0, 4)  ))]",
      "metadata": {
        "description": "dns gateway 2- public IP1"
      }
    },
    "dnsLabelgtw2PubIP2": {
      "type": "string",
      "defaultValue": "[toLower( concat( 'gtw2-ip2-', substring(uniqueString(resourceGroup().id), 0, 4)  ))]",
      "metadata": {
        "description": "dns gateway 2- public IP2"
      }
    }
  },
  "variables": {
    "location1": "[parameters('location1')]",
    "location2": "[parameters('location2')]",
    "vNet1Name": "[parameters('vNet1Name')]",
    "vNet2Name": "[parameters('vNet2Name')]",
    "subnet11Name": "[parameters('subnet11Name')]",
    "subnet12Name": "[parameters('subnet12Name')]",
    "subnet21Name": "[parameters('subnet21Name')]",
    "subnet22Name": "[parameters('subnet22Name')]",
    "vNet1AddressPrefix": "[parameters('vNet1AddressPrefix')]",
    "vNet2AddressPrefix": "[parameters('vNet2AddressPrefix')]",
    "subnet11Prefix": "[parameters('subnet11Prefix')]",
    "subnet12Prefix": "[parameters('subnet12Prefix')]",
    "subnet21Prefix": "[parameters('subnet21Prefix')]",
    "subnet22Prefix": "[parameters('subnet22Prefix')]",
    "gateway1SubnetPrefix": "[parameters('gateway1SubnetPrefix')]",
    "gateway2SubnetPrefix": "[parameters('gateway2SubnetPrefix')]",
    "vnet1ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]",
    "vnet2ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]",
    "gateway1subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'),'GatewaySubnet') ]",
    "gateway2subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'),'GatewaySubnet') ]",
    "subnet11Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'), variables('subnet11Name') )]",
    "subnet12Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'), variables('subnet12Name') )]",
    "subnet21Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'), variables('subnet21Name') )]",
    "subnet22Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'), variables('subnet22Name') )]",
    "gateway1Name": "[parameters('gateway1Name')]",
    "gateway2Name": "[parameters('gateway2Name')]",
    "gateway1PublicIP1Name": "[parameters('gateway1PublicIP1Name')]",
    "gateway1PublicIP2Name": "[parameters('gateway1PublicIP2Name')]",
    "gateway2PublicIP1Name": "[parameters('gateway2PublicIP1Name')]",
    "gateway2PublicIP2Name": "[parameters('gateway2PublicIP2Name')]",
    "dnsLabelgtw1PubIP1": "[parameters('dnsLabelgtw1PubIP1')]",
    "dnsLabelgtw1PubIP2": "[parameters('dnsLabelgtw1PubIP2')]",
    "dnsLabelgtw2PubIP1": "[parameters('dnsLabelgtw2PubIP1')]",
    "dnsLabelgtw2PubIP2": "[parameters('dnsLabelgtw2PubIP2')]",
    "asnGtw1": "[parameters('asnGtw1')]",
    "asnGtw2": "[parameters('asnGtw2')]",
    "vm1Name": "[parameters('vm1Name')]",
    "vm2Name": "[parameters('vm2Name')]",
    "vpnGatewayGeneration": "[parameters('vpnGatewayGeneration')]",
    "nsg1": "[concat(parameters('prefix'),'nsg1')]",
    "nsg2": "[concat(parameters('prefix'),'nsg2')]",
    "nic1Name": "[concat(variables('vm1Name'), '-nic')]",
    "nic2Name": "[concat(variables('vm2Name'), '-nic')]",
    "imagePublisher": "canonical",
    "imageOffer": "0001-com-ubuntu-server-focal",
    "imageSKU": "20_04-lts",
    "vm1PublicIPName": "[concat(variables('vm1Name'), '-pubIP')]",
    "vm2PublicIPName": "[concat(variables('vm2Name'), '-pubIP')]",
    "vmSize": "[parameters('vmSize')]",
    "storageAccountType": "[parameters('storageAccountType')]"
  },
  "resources": [
    {

      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg1')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "comments": "network security group for the VNet1",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsg2')]",
      "location": "[variables('location2')]",
      "comments": "network security group for the VNet2",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet1Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "comments": "Virtual Network 1",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet1AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet11Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet11Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1'))]"
              }
            }
          },
          {
            "name": "[variables('subnet12Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet12Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway1subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet2Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "comments": "Virtual Network 2",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet2AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet21Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet21Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2'))]"
              }
            }
          },
          {
            "name": "[variables('subnet22Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet22Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway2subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP1Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway1-instance 0",
      "location": "[variables('location1')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelgtw1PubIP1')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP2Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway1- instance 1",
      "location": "[variables('location1')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelgtw1PubIP2')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP1Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway2-instance 0",
      "location": "[variables('location2')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelgtw2PubIP1')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP2Name')]",
      "apiVersion": "2020-06-01",
      "comments": "public IP of the VPN Gateway2- instance 1",
      "location": "[variables('location2')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelgtw2PubIP2')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway1Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "comments": "VPN Gateway 1- deployed in location 1",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway1Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway1Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "[variables('vpnGatewayGeneration')]",
        "bgpSettings": {
          "asn": "[variables('asnGtw1')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway2Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "comments": "VPN Gateway 2- deployed in location 2",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway2Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway2Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "[variables('vpnGatewayGeneration')]",
        "bgpSettings": {
          "asn": "[variables('asnGtw2')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm1PublicIPName')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "comments": "public IP address of the VM1",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm2PublicIPName')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "comments": "public IP address of the VM2",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic1Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "comments": "NIC of the VM1",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm1PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet11Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic2Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "comments": "NIC of the VM2",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm2PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm2PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet21Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm1Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "comments": "VM1",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vm1Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic1Name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm2Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "comments": "VM2",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vm2Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic2Name'))]"
            }
          ]
        }
      }
    }
  ]
}