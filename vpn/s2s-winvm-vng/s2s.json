{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "mngIP": {
            "type": "string",
            "metadata": {
                "description": "management IP to access to the VM. it is the only allow IP to access in RDP/SSH to the VMs"
            }
        },
        "location1": {
            "type": "string",
            "defaultValue": "uksouth",
            "metadata": {
                "description": "azure region where is deployed the vnet1"
            }
        },
        "location2": {
            "type": "string",
            "defaultValue": "uksouth",
            "metadata": {
                "description": "azure region where is deployed the vnet2"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password"
            }
        }
    },
    "variables": {
        "location1": "[parameters('location1')]",
        "location2": "[parameters('location2')]",
        "vnet1": {
            "location": "[variables('location1')]",
            "name": "vnet1",
            "addressSpacePrefix1": "10.0.1.0/24",
            "addressSpacePrefix2": "10.0.2.0/24",
            "addressSpacePrefix3": "10.0.3.0/24",
            "addressSpacePrefix4": "10.0.4.0/24",
            "subnet1Name": "subnet1",
            "subnet2Name": "subnet2",
            "subnet3Name": "subnet3",
            "subnet1Prefix": "10.0.1.0/24",
            "subnet2Prefix": "10.0.2.0/24",
            "subnet3Prefix": "10.0.3.0/24",
            "gatewayName": "gw1",
            "gatewaysubnet": "10.0.4.0/24",
            "gatewaySku": "VpnGw1"
        },
        "vnet2": {
            "location": "[variables('location2')]",
            "name": "vnet2",
            "addressSpacePrefix1": "10.0.10.0/24",
            "addressSpacePrefix2": "10.0.11.0/24",
            "addressSpacePrefix3": "10.0.12.0/24",
            "subnet1Name": "subnet1",
            "subnet2Name": "subnet2",
            "subnet3Name": "subnet3",
            "subnet1Prefix": "10.0.10.0/24",
            "subnet2Prefix": "10.0.11.0/24",
            "subnet3Prefix": "10.0.12.0/24"
        },
        "nsg1Name": "nsg1",
        "nsg2Name": "nsg2",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "nva": {
            "location": "[variables('vnet2').location]",
            "vmName": "nva",
            "vmSize": "Standard_DS1_v2",
            "Publisher": "MicrosoftWindowsServer",
            "Offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest",
            "vnetName": "[variables('vnet2').name]",
            "subnet1Name": "[variables('vnet2').subnet1Name]",
            "privateIP1": "10.0.10.10",
            "enableIPForwardingNIC1": true,
            "subnet2Name": "[variables('vnet2').subnet2Name]",
            "privateIP2": "10.0.11.10",
            "enableIPForwardingNIC2": true,
            "acceleratedNetworking": false
        },
        "vmarray": [
            {
                "location": "[variables('vnet1').location]",
                "vmName": "vm1",
                "vmSize": "Standard_B1s",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet1').name]",
                "subnetName": "[variables('vnet1').subnet3Name]",
                "privateIP": "10.0.3.10",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            },
            {
                "location": "[variables('vnet2').location]",
                "vmName": "vm2",
                "vmSize": "Standard_B1s",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet2').name]",
                "subnetName": "[variables('vnet2').subnet3Name]",
                "privateIP": "10.0.12.10",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            },
            {
                "location": "[variables('vnet2').location]",
                "vmName": "h2",
                "vmSize": "Standard_B1s",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet2').name]",
                "subnetName": "[variables('vnet2').subnet2Name]",
                "privateIP": "10.0.11.20",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            }
        ],
        "vmCount": "[length(variables('vmArray'))]",
        "RT-to-vnet1": {
            "name": "RT-to-vnet1",
            "location": "[variables('vnet2').location]",
            "nameRTEntry1": "to-vnet1-subnet3",
            "destinationAddressPrefix1": "[variables('vnet1').addressSpacePrefix3]",
            "nextHopType1": "VirtualAppliance",
            "nextHopIpAddress1": "[variables('nva').privateIP2]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg1Name')]",
            "apiVersion": "2020-06-01",
            "location": "[variables('vnet1').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP-rule",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "[parameters('mngIP')]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('mngIP')]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 510,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "UDP-Rule1",
                        "properties": {
                            "description": "Allow UDP",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "500",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 600,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "UDP-Rule2",
                        "properties": {
                            "description": "Allow UDP",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4500",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 610,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg2Name')]",
            "apiVersion": "2020-06-01",
            "location": "[variables('vnet2').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP-rule",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "[parameters('mngIP')]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('mngIP')]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 510,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "UDP-Rule1",
                        "properties": {
                            "description": "Allow UDP",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "500",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 600,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "UDP-Rule2",
                        "properties": {
                            "description": "Allow UDP",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4500",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 610,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('RT-to-vnet1').name]",
            "apiVersion": "2020-06-01",
            "location": "[variables('RT-to-vnet1').location]",
            "dependsOn": [],
            "properties": {
                "routes": [
                    {
                        "name": "[variables('RT-to-vnet1').nameRTEntry1]",
                        "properties": {
                            "addressPrefix": "[variables('RT-to-vnet1').destinationAddressPrefix1]",
                            "nextHopType": "[variables('RT-to-vnet1').nextHopType1]",
                            "nextHopIpAddress": "[variables('RT-to-vnet1').nextHopIpAddress1]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet1').name]",
            "apiVersion": "2020-06-01",
            "location": "[variables('vnet1').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1Name'))]"
            ],
            "comments": "Create vnet1",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet1').addressSpacePrefix1]",
                        "[variables('vnet1').addressSpacePrefix2]",
                        "[variables('vnet1').addressSpacePrefix3]",
                        "[variables('vnet1').addressSpacePrefix4]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet1').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnet1Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1Name'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vnet1').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnet2Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1Name'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vnet1').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnet3Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1Name'))]"
                            }
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').gatewaysubnet]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet2').name]",
            "apiVersion": "2020-06-01",
            "location": "[variables('vnet2').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('RT-to-vnet1').name)]"
            ],
            "comments": "Create vnet2",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet2').addressSpacePrefix1]",
                        "[variables('vnet2').addressSpacePrefix2]",
                        "[variables('vnet2').addressSpacePrefix3]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet2').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet1Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vnet2').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet2Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('RT-to-vnet1').name)]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vnet2').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet3Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('RT-to-vnet1').name)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('vnet1').gatewayName,'-pubIP')]",
            "apiVersion": "2020-06-01",
            "location": "[variables('vnet1').location]",
            "comments": "This is the public IP of the VPN Gateway",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[variables('vnet1').gatewayName]",
            "apiVersion": "2020-06-01",
            "location": "[variables('vnet1').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vnet1').gatewayName,'-pubIP') )]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1').name)]"
            ],
            "comments": "This is the VPN Gateway for vnet1",
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet1').name, 'GatewaySubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('vnet1').gatewayName,'-pubIP') )]"
                            }
                        },
                        "name": "GtwConfig1"
                    }
                ],
                "gatewayType": "Vpn",
                "sku": {
                    "name": "[variables('vnet1').gatewaySku]",
                    "tier": "[variables('vnet1').gatewaySku]"
                },
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": false
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('nva').vmName,'-pubIP')]",
            "apiVersion": "2020-06-01",
            "location": "[variables('nva').location]",
            "comments": "public IP address VMs",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('nva').vmName,'-NIC1' )]",
            "apiVersion": "2020-06-01",
            "location": "[variables('nva').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2').name)]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat (variables('nva').vmName,'-pubIP') )]"
            ],
            "properties": {
                "primary": true,
                "enableIPForwarding": "[variables('nva').enableIPForwardingNIC1]",
                "enableAcceleratedNetworking": "[variables('nva').acceleratedNetworking]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('nva').privateIP1]",
                            "publicIPAddress": {
                                "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('nva').vmName,'-pubIP' )  )]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('nva').vnetName, variables('nva').subnet1Name)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('nva').vmName,'-NIC2' )]",
            "apiVersion": "2020-06-01",
            "location": "[variables('nva').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2').name)]"
            ],
            "properties": {
                "primary": true,
                "enableIPForwarding": "[variables('nva').enableIPForwardingNIC2]",
                "enableAcceleratedNetworking": "[variables('nva').acceleratedNetworking]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('nva').privateIP2]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('nva').vnetName, variables('nva').subnet2Name)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('nva').vmName]",
            "apiVersion": "2020-06-01",
            "location": "[variables('nva').location]",
            "comments": "Virtual Machines",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nva').vmName,'-NIC1')  )]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nva').vmName,'-NIC2')  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('nva').vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('nva').vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('nva').Publisher]",
                        "offer": "[variables('nva').Offer]",
                        "sku": "[variables('nva').sku]",
                        "version": "[variables('nva').version]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('nva').vmName,'-OS')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('nva').vmName,'-NIC1' )  )]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('nva').vmName,'-NIC2' )  )]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-pubIP')]",
            "apiVersion": "2020-06-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "public IP address VMs",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "copy": {
                "name": "publicIpCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )]",
            "apiVersion": "2020-06-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1').name)]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat (variables('vmArray')[copyIndex()].vmName,'-pubIP' ))]"
            ],
            "properties": {
                "primary": true,
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]",
                "enableAcceleratedNetworking": "[variables('vmArray')[copyIndex()].acceleratedNetworking]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
                            "publicIPAddress": {
                                "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('vmArray')[copyIndex()].vmName,'-pubIP' )  )]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vNetName, variables('vmArray')[copyIndex()].subnetName)]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2020-06-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "Virtual Machines",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArray')[copyIndex()].vmName,'-NIC')  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                        "version": "[variables('vmArray')[copyIndex()].version]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OS')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )  )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        }
    ]
}