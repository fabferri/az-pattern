{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location1": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure region"
      }
    },
    "location2": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure region"
      }
    },
    "vNet1Name": {
      "type": "string",
      "defaultValue": "vnet1",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vNet2Name": {
      "type": "string",
      "defaultValue": "vnet2",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vNet1AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.10.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "vNet2AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.20.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "subnet1",
      "metadata": {
        "description": "Arbitrary name for the Azure Subnet"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "subnet2",
      "metadata": {
        "description": "Arbitrary name for the Azure Subnet"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.10.0/27",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of vNet1AddressPrefix address space"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.0.20.0/27",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of vNet2AddressPrefix address space"
      }
    },
    "gateway1subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.10.128/25",
      "metadata": {
        "description": "CIDR block for gateway subnet, subset of vNet1AddressPrefix address space"
      }
    },
    "gateway2subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.20.128/25",
      "metadata": {
        "description": "CIDR block for gateway subnet, subset of vNet2AddressPrefix address space"
      }
    },
    "gateway1PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw1IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway1"
      }
    },
    "gateway1PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw1IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway1"
      }
    },
    "gateway2PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw2IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway2"
      }
    },
    "gateway2PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw2IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway2"
      }
    },
    "gateway1Name": {
      "type": "string",
      "defaultValue": "vpnGw1",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gateway2Name": {
      "type": "string",
      "defaultValue": "vpnGw2",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gatewaySku": {
      "type": "string",
      "defaultValue": "VpnGw2AZ",
      "metadata": {
        "description": "The Sku of the Gateway"
      }
    },
    "asnGtw1": {
      "type": "int",
      "defaultValue": 65010,
      "metadata": {
        "description": "BGP Autonomous System Number of the VNet"
      }
    },
    "asnGtw2": {
      "type": "int",
      "defaultValue": 65020,
      "metadata": {
        "description": "BGP Autonomous System Number of the remote VNet"
      }
    },
    "vm1Name": {
      "type": "string",
      "defaultValue": "vm1",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vm2Name": {
      "type": "string",
      "defaultValue": "vm2",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "Size of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for sample VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "User password for sample VM"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The storage account type for the disks of the VM"
      }
    }
  },
  "variables": {
    "location1": "[parameters('location1')]",
    "location2": "[parameters('location2')]",
    "vNet1Name": "[parameters('vNet1Name')]",
    "vNet2Name": "[parameters('vNet2Name')]",
    "subnet1Name": "[parameters('subnet1Name')]",
    "subnet2Name": "[parameters('subnet2Name')]",
    "vNet1AddressPrefix": "[parameters('vNet1AddressPrefix')]",
    "vNet2AddressPrefix": "[parameters('vNet2AddressPrefix')]",
    "subnet1Prefix": "[parameters('subnet1Prefix')]",
    "subnet2Prefix": "[parameters('subnet2Prefix')]",
    "gateway1SubnetPrefix": "[parameters('gateway1SubnetPrefix')]",
    "gateway2SubnetPrefix": "[parameters('gateway2SubnetPrefix')]",
    "gateway1Name": "[parameters('gateway1Name')]",
    "gateway2Name": "[parameters('gateway2Name')]",
    "gateway1PublicIP1Name": "[parameters('gateway1PublicIP1Name')]",
    "gateway1PublicIP2Name": "[parameters('gateway1PublicIP2Name')]",
    "gateway2PublicIP1Name": "[parameters('gateway2PublicIP1Name')]",
    "gateway2PublicIP2Name": "[parameters('gateway2PublicIP2Name')]",
    "asnGtw1": "[parameters('asnGtw1')]",
    "asnGtw2": "[parameters('asnGtw2')]",
    "vm1Name": "[parameters('vm1Name')]",
    "vm2Name": "[parameters('vm2Name')]",
    "vm1nsg": "[concat(variables('vm1Name'),'-nsg')]",
    "vm2nsg": "[concat(variables('vm2Name'),'-nsg')]",
    "nic1Name": "[concat(variables('vm1Name'), '-nic')]",
    "nic2Name": "[concat(variables('vm2Name'), '-nic')]",
    "publisher": "canonical",
    "offer": "ubuntu-24_04-lts",
    "sku": "server",
    "version": "latest",
    "vm1PublicIPName": "[concat(variables('vm1Name'), '-pubIP')]",
    "vm2PublicIPName": "[concat(variables('vm2Name'), '-pubIP')]",
    "vmSize": "[parameters('vmSize')]",
    "storageAccountType": "[parameters('storageAccountType')]",
    "ipForwarder": "10.0.99.99",
    "RTGWsubnetVNet1": "RT-GWSubnetVNet1",
    "RTGWsubnetVNet2": "RT-GWSubnetVNet2"
  },
  "resources": [
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('RTGWsubnetVNet1')]",
      "apiVersion": "2018-06-01",
      "comments": "Routing table subnet2",
      "location": "[variables('location1')]",
      "dependsOn": [],
      "properties": {
        "routes": [
          {
            "name": "[concat('rt-to-', variables('vNet2Name'))]",
            "properties": {
              "addressPrefix": "[variables('vNet2AddressPrefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('ipForwarder')]"
            }
          }
        ]
      },
      "resources": []
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('RTGWsubnetVNet2')]",
      "apiVersion": "2018-06-01",
      "comments": "Routing table subnet2",
      "location": "[variables('location2')]",
      "dependsOn": [],
      "properties": {
        "routes": [
          {
            "name": "[concat('rt-to-', variables('vNet1Name'))]",
            "properties": {
              "addressPrefix": "[variables('vNet1AddressPrefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('ipForwarder')]"
            }
          }
        ]
      },
      "resources": []
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet1Name')]",
      "apiVersion": "2023-11-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('RTGWsubnetVNet1'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet1AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway1subnetPrefix')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('RTGWsubnetVNet1'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet2Name')]",
      "apiVersion": "2023-11-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('RTGWsubnetVNet2'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet2AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway2subnetPrefix')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('RTGWsubnetVNet2'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP1Name')]",
      "apiVersion": "2023-11-01",
      "comments": "public IP of the VPN Gateway1-instance 0",
      "location": "[variables('location1')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP2Name')]",
      "apiVersion": "2023-11-01",
      "comments": "public IP of the VPN Gateway1- instance 1",
      "location": "[variables('location1')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP1Name')]",
      "apiVersion": "2023-11-01",
      "comments": "public IP of the VPN Gateway2-instance 0",
      "location": "[variables('location2')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP2Name')]",
      "apiVersion": "2023-11-01",
      "comments": "public IP of the VPN Gateway2- instance 1",
      "location": "[variables('location2')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway1Name')]",
      "apiVersion": "2023-11-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'),'GatewaySubnet') ]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway1Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'),'GatewaySubnet') ]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway1Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2",
        "allowRemoteVnetTraffic": true,
        "bgpSettings": {
          "asn": "[variables('asnGtw1')]"
        },
        "enablePrivateIpAddress": true
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway2Name')]",
      "apiVersion": "2023-11-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'),'GatewaySubnet') ]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway2Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'),'GatewaySubnet') ]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway2Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2",
        "allowRemoteVnetTraffic": true,
        "bgpSettings": {
          "asn": "[variables('asnGtw2')]"
        },
        "enablePrivateIpAddress": true
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm1PublicIPName')]",
      "apiVersion": "2023-11-01",
      "location": "[variables('location1')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm2PublicIPName')]",
      "apiVersion": "2023-11-01",
      "location": "[variables('location2')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [ "1", "2", "3" ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('vm1nsg')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('vm2nsg')]",
      "apiVersion": "2023-11-01",
      "location": "[variables('location2')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH-rule",
            "properties": {
              "description": "allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 510,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic1Name')]",
      "apiVersion": "2023-11-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vm1nsg'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm1PublicIPName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'), variables('subnet1Name') )]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vm1nsg'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic2Name')]",
      "apiVersion": "2023-11-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm2PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vm2nsg'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm2PublicIPName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'), variables('subnet2Name') )]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vm2nsg'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm1Name')]",
      "apiVersion": "2023-03-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('publisher')]",
            "offer": "[variables('offer')]",
            "sku": "[variables('SKU')]",
            "version": "[variables('version')]"
          },
          "osDisk": {
            "name": "[concat(variables('vm1Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic1Name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm2Name')]",
      "apiVersion": "2023-03-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('publisher')]",
            "offer": "[variables('offer')]",
            "sku": "[variables('SKU')]",
            "version": "[variables('version')]"
          },
          "osDisk": {
            "name": "[concat(variables('vm2Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic2Name'))]"
            }
          ]
        }
      }
    }
  ]
}