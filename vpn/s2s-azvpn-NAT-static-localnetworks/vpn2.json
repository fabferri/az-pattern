{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location1": {
            "type": "string",
            "defaultValue": "westus2",
            "metadata": {
                "description": "Azure region vnet1"
            }
        },
        "location2": {
            "type": "string",
            "defaultValue": "westus2",
            "metadata": {
                "description": "Azure region vnet2"
            }
        },
        "location3": {
            "type": "string",
            "defaultValue": "westus2",
            "metadata": {
                "description": "Azure region vnet3"
            }
        },
        "gateway1PublicIP1Name": {
            "type": "string",
            "defaultValue": "vpnGw1IP1",
            "metadata": {
                "description": "name for public IP1 of the VPN gateway1 in vnet1"
            }
        },
        "gateway1PublicIP2Name": {
            "type": "string",
            "defaultValue": "vpnGw1IP2",
            "metadata": {
                "description": "name for public IP2 of the VPN gateway1 in vnet1"
            }
        },
        "gateway2PublicIP1Name": {
            "type": "string",
            "defaultValue": "vpnGw2IP1",
            "metadata": {
                "description": "name for public IP1 of the VPN gateway2 in vnet2"
            }
        },
        "gateway2PublicIP2Name": {
            "type": "string",
            "defaultValue": "vpnGw2IP2",
            "metadata": {
                "description": "name for public IP2 of the VPN gateway2 in vnet2"
            }
        },
        "gateway3PublicIP1Name": {
            "type": "string",
            "defaultValue": "vpnGw3IP1",
            "metadata": {
                "description": "name for public IP1 of the VPN gateway3 in vnet3"
            }
        },
        "gateway3PublicIP2Name": {
            "type": "string",
            "defaultValue": "vpnGw3IP2",
            "metadata": {
                "description": "name for public IP2 of the VPN gateway3 in vnet3"
            }
        },
        "gateway1Name": {
            "type": "string",
            "defaultValue": "vpnGw1",
            "metadata": {
                "description": "name for the VPN gateway1 in vnet1"
            }
        },
        "gateway2Name": {
            "type": "string",
            "defaultValue": "vpnGw2",
            "metadata": {
                "description": "name for the VPN gateway2 in vnet2"
            }
        },
        "gateway3Name": {
            "type": "string",
            "defaultValue": "vpnGw3",
            "metadata": {
                "description": "name for the VPN gateway3 in vnet3"
            }
        },
        "locNetgw2IP1-site1IP1": {
            "type": "string",
            "defaultValue": "locNetgw2IP1-site1IP1",
            "metadata": {
                "description": "name of the local network site1 across the VPN gtw2-public IP1"
            }
        },
        "locNetgw2IP2-site1IP2": {
            "type": "string",
            "defaultValue": "locNetgw2IP2-site1IP2",
            "metadata": {
                "description": "name of the local network site1 across the VPN gtw2-public IP2"
            }
        },
        "locNetgw1IP1-site2IP1": {
            "type": "string",
            "defaultValue": "locNetgw1IP1-site2IP1",
            "metadata": {
                "description": "name of the local network site2 across the VPN gtw1-public IP1"
            }
        },
        "locNetgw1IP2-site2IP2": {
            "type": "string",
            "defaultValue": "locNetgw1IP2-site2IP2",
            "metadata": {
                "description": "name of the local network site2 across the VPN gtw1-public IP2"
            }
        },
        "locNetgw1IP1-site3IP1": {
            "type": "string",
            "defaultValue": "locNetgw1IP1-site3IP1",
            "metadata": {
                "description": "name of the local network site3 across the VPN gtw1-public IP1"
            }
        },
        "locNetgw1IP2-site3IP2": {
            "type": "string",
            "defaultValue": "locNetgw1IP2-site3IP2",
            "metadata": {
                "description": "name of the local network site3 across the VPN gtw1-public IP2"
            }
        },
        "locNetgw3IP1-site1IP1": {
            "type": "string",
            "defaultValue": "locNetgw3IP1-site1IP1",
            "metadata": {
                "description": "name of the local network site1 across the VPN gtw3-public IP1"
            }
        },
        "locNetgw3IP2-site1IP2": {
            "type": "string",
            "defaultValue": "locNetgw3IP2-site1IP2",
            "metadata": {
                "description": "ame of the local network site1 across the VPN gtw3-public IP2"
            }
        },
        "site1_localAddressPrefix": {
            "type": "string",
            "defaultValue": "100.0.1.0/24",
            "metadata": {
                "description": "CIDR block representing the address space of site1"
            }
        },
        "site2_localAddressPrefix": {
            "type": "string",
            "defaultValue": "100.0.2.0/24",
            "metadata": {
                "description": "CIDR block representing the address space of site2"
            }
        },
        "site3_localAddressPrefix": {
            "type": "string",
            "defaultValue": "100.0.3.0/24",
            "metadata": {
                "description": "CIDR block representing the address space of site3"
            }
        },
        "connectionName11-21": {
            "type": "string",
            "defaultValue": "gtw1IP1-to-gtw2IP1",
            "metadata": {
                "description": "name for the new connection between VPN GTW1-publicIP1 -> GTW2-publicIP1"
            }
        },
        "connectionName12-22": {
            "type": "string",
            "defaultValue": "gtw1IP2-to-gtw2IP2",
            "metadata": {
                "description": "name for the new connection between VPN GTW1-publicIP2 -> GTW2-publicIP2"
            }
        },
        "connectionName11-31": {
            "type": "string",
            "defaultValue": "gtw1IP1-to-gtw3IP1",
            "metadata": {
                "description": "name for the new connection between VPN GTW1-publicIP1 -> GTW3-publicIP1"
            }
        },
        "connectionName12-32": {
            "type": "string",
            "defaultValue": "gtw1IP2-to-gtw3IP2",
            "metadata": {
                "description": "name for the new connection between VPN GTW1-publicIP2 -> GTW3-publicIP2"
            }
        },
        "connectionName21-11": {
            "type": "string",
            "defaultValue": "gtw2IP1-to-gtw1IP1",
            "metadata": {
                "description": "name for the new connection between VPN GTW2-publicIP1 -> GTW1-publicIP1"
            }
        },
        "connectionName22-12": {
            "type": "string",
            "defaultValue": "gtw2IP2-to-gtw1IP2",
            "metadata": {
                "description": "name for the new connection between VPN GTW2-publicIP2 -> GTW1-publicIP2"
            }
        },
        "connectionName31-11": {
            "type": "string",
            "defaultValue": "gtw3IP1-to-gtw1IP1",
            "metadata": {
                "description": "name for the new connection between VPN GTW3-publicIP1 -> GTW1-publicIP1"
            }
        },
        "connectionName32-12": {
            "type": "string",
            "defaultValue": "gtw3IP2-to-gtw1IP2",
            "metadata": {
                "description": "name for the new connection between VPN GTW3-publicIP2 -> GTW1-publicIP2"
            }
        },
        "sharedKey": {
            "type": "string",
            "defaultValue": "##$gpa@PSK-101",
            "metadata": {
                "description": "Shared key (PSK) for IPSec tunnels"
            }
        },
        "gtw1_ingressNATRuleName_tovpn2": {
            "type": "string",
            "defaultValue": "vpn1natIngressRule_tovpn2",
            "metadata": {
                "description": "Ingress NAT rule Gateway1"
            }
        },
        "gtw1_ingressNATRuleName_tovpn3": {
            "type": "string",
            "defaultValue": "vpn1natIngressRule_tovpn3",
            "metadata": {
                "description": "Ingress NAT rule Gateway1"
            }
        },
        "gtw1_egressNATRuleName": {
            "type": "string",
            "defaultValue": "vpn1natEgressRule",
            "metadata": {
                "description": "Egress NAT rule Gateway1"
            }
        }
    },
    "variables": {
        "location1": "[parameters('location1')]",
        "location2": "[parameters('location2')]",
        "location3": "[parameters('location3')]",
        "gateway1Name": "[parameters('gateway1Name')]",
        "gateway2Name": "[parameters('gateway2Name')]",
        "gateway3Name": "[parameters('gateway3Name')]",
        "locNetgw2IP1-site1IP1": "[parameters('locNetgw2IP1-site1IP1')]",
        "locNetgw2IP2-site1IP2": "[parameters('locNetgw2IP2-site1IP2')]",
        "locNetgw1IP1-site2IP1": "[parameters('locNetgw1IP1-site2IP1')]",
        "locNetgw1IP2-site2IP2": "[parameters('locNetgw1IP2-site2IP2')]",
        "locNetgw1IP1-site3IP1": "[parameters('locNetgw1IP1-site3IP1')]",
        "locNetgw1IP2-site3IP2": "[parameters('locNetgw1IP2-site3IP2')]",
        "locNetgw3IP1-site1IP1": "[parameters('locNetgw3IP1-site1IP1')]",
        "locNetgw3IP2-site1IP2": "[parameters('locNetgw3IP2-site1IP2')]",

        "gateway1PublicIP1Name": "[parameters('gateway1PublicIP1Name')]",
        "gateway1PublicIP2Name": "[parameters('gateway1PublicIP2Name')]",
        "gateway2PublicIP1Name": "[parameters('gateway2PublicIP1Name')]",
        "gateway2PublicIP2Name": "[parameters('gateway2PublicIP2Name')]",
        "gateway3PublicIP1Name": "[parameters('gateway3PublicIP1Name')]",
        "gateway3PublicIP2Name": "[parameters('gateway3PublicIP2Name')]",
        "gateway1PublicIP1Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]",
        "gateway1PublicIP2Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]",
        "gateway2PublicIP1Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]",
        "gateway2PublicIP2Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]",
        "gateway3PublicIP1Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway3PublicIP1Name'))]",
        "gateway3PublicIP2Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway3PublicIP2Name'))]",
        
        "connectionName11-21": "[parameters('connectionName11-21')]",
        "connectionName12-22": "[parameters('connectionName12-22')]",
        "connectionName11-31": "[parameters('connectionName11-31')]",
        "connectionName12-32": "[parameters('connectionName12-32')]",
        "connectionName21-11": "[parameters('connectionName21-11')]",
        "connectionName22-12": "[parameters('connectionName22-12')]",
        "connectionName31-11": "[parameters('connectionName31-11')]",
        "connectionName32-12": "[parameters('connectionName32-12')]",
        "gtw1_ingressNATRuleName_tovpn2": "[parameters('gtw1_ingressNATRuleName_tovpn2')]",
        "gtw1_ingressNATRuleName_tovpn3": "[parameters('gtw1_ingressNATRuleName_tovpn3')]",
        "gtw1_egressNATRuleName": "[parameters('gtw1_egressNATRuleName')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworkGateways/natRules",
            "name": "[concat(variables('gateway1Name'),'/',variables('gtw1_ingressNATRuleName_tovpn2'))]",
            "apiVersion": "2021-02-01",
            "dependsOn": [
            ],
            "properties": {
                "type": "Static",
                "mode": "ingressSnat",
                "internalMappings": [
                    {
                        "addressSpace": "10.0.1.0/24"
                    }
                ],
                "externalMappings": [
                    {
                        "addressSpace": "100.0.2.0/24"
                    }
                ],
                "ipConfigurationId": ""
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways/natRules",
            "name": "[concat(variables('gateway1Name'),'/',variables('gtw1_ingressNATRuleName_tovpn3'))]",
            "apiVersion": "2021-02-01",
            "dependsOn": [
            ],
            "properties": {
                "type": "Static",
                "mode": "ingressSnat",
                "internalMappings": [
                    {
                        "addressSpace": "10.0.1.0/24"
                    }
                ],
                "externalMappings": [
                    {
                        "addressSpace": "100.0.3.0/24"
                    }
                ],
                "ipConfigurationId": ""
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways/natRules",
            "name": "[concat(variables('gateway1Name'),'/',variables('gtw1_egressNATRuleName'))]",
            "apiVersion": "2021-02-01",
            "dependsOn": [
            ],
            "properties": {
                "type": "Static",
                "mode": "egressSnat",
                "internalMappings": [
                    {
                        "addressSpace": "10.0.1.0/24"
                    }
                ],
                "externalMappings": [
                    {
                        "addressSpace": "100.0.1.0/24"
                    }
                ],
                "ipConfigurationId": ""
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('locNetgw2IP1-site1IP1')]",
            "apiVersion": "2020-06-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location2')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway1PublicIP1Id'),'2017-10-01').ipAddress]",
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('site1_localAddressPrefix')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('locNetgw2IP2-site1IP2')]",
            "apiVersion": "2020-06-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location2')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway1PublicIP2Id'),'2017-10-01').ipAddress]",
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('site1_localAddressPrefix')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('locNetgw1IP1-site2IP1')]",
            "apiVersion": "2020-06-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location1')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway2PublicIP1Id'),'2017-10-01').ipAddress]",
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('site2_localAddressPrefix')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('locNetgw1IP2-site2IP2')]",
            "apiVersion": "2020-06-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location1')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway2PublicIP2Id'),'2017-10-01').ipAddress]",
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('site2_localAddressPrefix')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('locNetgw1IP1-site3IP1')]",
            "apiVersion": "2020-06-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location3')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway3PublicIP1Id'),'2017-10-01').ipAddress]",
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('site3_localAddressPrefix')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('locNetgw1IP2-site3IP2')]",
            "apiVersion": "2020-06-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location3')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway3PublicIP2Id'),'2017-10-01').ipAddress]",
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('site3_localAddressPrefix')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('locNetgw3IP1-site1IP1')]",
            "apiVersion": "2020-06-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location3')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway1PublicIP1Id'),'2017-10-01').ipAddress]",
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('site1_localAddressPrefix')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('locNetgw3IP2-site1IP2')]",
            "apiVersion": "2020-06-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location3')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway1PublicIP2Id'),'2017-10-01').ipAddress]",
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('site1_localAddressPrefix')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName11-21')]",
            "apiVersion": "2020-06-01",
            "comments": "VPN connection between [Gateway1-pubIP1 -> Gateway2-pubIP1]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw1IP1-site2IP1'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_ingressNATRuleName_tovpn2'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_egressNATRuleName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw1IP1-site2IP1'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false,
                "ingressNatRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_ingressNATRuleName_tovpn2'))]"
                    }
                ],
                "egressNatRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_egressNATRuleName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName12-22')]",
            "apiVersion": "2020-06-01",
            "comments": "VPN connection between [Gateway1-pubIP2 -> Gateway2-pubIP2]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw1IP2-site2IP2'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_ingressNATRuleName_tovpn2'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_egressNATRuleName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw1IP2-site2IP2'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false,
                "ingressNatRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_ingressNATRuleName_tovpn2'))]"
                    }
                ],
                "egressNatRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_egressNATRuleName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName21-11')]",
            "apiVersion": "2020-06-01",
            "comments": "VPN connection between [Gateway2-pubIP1 -> Gateway1-pubIP1]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw2IP1-site1IP1'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw2IP1-site1IP1'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName22-12')]",
            "apiVersion": "2020-06-01",
            "comments": "VPN connection between [Gateway2-pubIP2 -> Gateway1-pubIP2]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw2IP2-site1IP2'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw2IP2-site1IP2'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName11-31')]",
            "apiVersion": "2020-06-01",
            "comments": "VPN connection Gateway1 -> Gateway3-pubIP1",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw1IP1-site3IP1'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_ingressNATRuleName_tovpn3'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_egressNATRuleName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw1IP1-site3IP1'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false,
                "ingressNatRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_ingressNATRuleName_tovpn3'))]"
                    }
                ],
                "egressNatRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_egressNATRuleName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName12-32')]",
            "apiVersion": "2020-06-01",
            "comments": "VPN connection between Gateway1 -> Gateway2-pubIP2",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw1IP2-site3IP2'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_ingressNATRuleName_tovpn3'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_egressNATRuleName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw1IP2-site3IP2'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false,
                "ingressNatRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_ingressNATRuleName_tovpn3'))]"
                    }
                ],
                "egressNatRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworkGateways/natRules',variables('gateway1Name'),variables('gtw1_egressNATRuleName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName31-11')]",
            "apiVersion": "2020-06-01",
            "comments": "VPN connection between Gateway3 -> Gateway1-pubIP1",
            "location": "[variables('location3')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw3IP1-site1IP1'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway3Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw3IP1-site1IP1'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName32-12')]",
            "apiVersion": "2020-06-01",
            "comments": "VPN connection between [Gateway3] and [Gateway1-pubIP2]",
            "location": "[variables('location3')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw3IP2-site1IP2'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway3Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('locNetgw3IP2-site1IP2'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false
            }
        }
    ]
}