{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location1": {
            "type": "string",
            "defaultValue": "uksouth",
            "metadata": {
                "description": "Azure region"
            }
        },
        "location2": {
            "type": "string",
            "defaultValue": "uksouth",
            "metadata": {
                "description": "Azure region"
            }
        },
        "gateway1Name": {
            "type": "string",
            "defaultValue": "vpnGw1",
            "metadata": {
                "description": "Arbitrary name for the new gateway1"
            }
        },
        "gateway2Name": {
            "type": "string",
            "defaultValue": "vpnGw2",
            "metadata": {
                "description": "Arbitrary name for the new gateway2"
            }
        },
        "gateway1PublicIP1Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('gateway1Name'),'IP1')]",
            "metadata": {
                "description": "Name for public IP1 resource used for the new azure gateway1"
            }
        },
        "gateway1PublicIP2Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('gateway1Name'),'IP2')]",
            "metadata": {
                "description": "Name for public IP2 resource used for the new azure gateway1"
            }
        },
        "gateway2PublicIP1Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('gateway2Name'),'IP1')]",
            "metadata": {
                "description": "Name for public IP1 resource used for the new azure gateway2"
            }
        },
        "gateway2PublicIP2Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('gateway2Name'),'IP2')]",
            "metadata": {
                "description": "Name for public IP2 resource used for the new azure gateway2"
            }
        },
        "localGatewayName11": {
            "type": "string",
            "defaultValue": "localGateway11",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway1"
            }
        },
        "localGatewayName12": {
            "type": "string",
            "defaultValue": "localGateway12",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway1"
            }
        },
        "localGatewayName21": {
            "type": "string",
            "defaultValue": "localGateway21",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway2"
            }
        },
        "localGatewayName22": {
            "type": "string",
            "defaultValue": "localGateway22",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway2"
            }
        },
        "asnGtw1": {
            "type": "int",
            "defaultValue": 65010,
            "metadata": {
                "description": "BGP Autonomous System Number of the VNet"
            }
        },
        "asnGtw2": {
            "type": "int",
            "defaultValue": 65020,
            "metadata": {
                "description": "BGP Autonomous System Number of the remote VNet"
            }
        },
        "connectionName11-21": {
            "type": "string",
            "defaultValue": "[concat(parameters('gateway1Name'),'-to-',parameters('gateway2Name'),'-pubIP1')]",
            "metadata": {
                "description": "Name for the new connection between Azure VNet and other network"
            }
        },
        "connectionName12-22": {
            "type": "string",
            "defaultValue": "[concat(parameters('gateway1Name'),'-to-',parameters('gateway2Name'),'-pubIP2')]",
            "metadata": {
                "description": "Name for the new connection between Azure VNet and other network"
            }
        },
        "connectionName21-11": {
            "type": "string",
            "defaultValue": "[concat(parameters('gateway2Name'),'-to-',parameters('gateway1Name'),'-pubIP1')]",
            "metadata": {
                "description": "Name for the new connection between Azure VNet and other network"
            }
        },
        "connectionName22-12": {
            "type": "string",
            "defaultValue": "[concat(parameters('gateway2Name'),'-to-',parameters('gateway1Name'),'-pubIP2')]",
            "metadata": {
                "description": "Name for the new connection between Azure VNet and other network"
            }
        },
        "outboundAuthCertificate1": {
            "type": "string",
            "metadata": {
                "description": "URL to the outbound authentication certificate in Key Vault"
            }
        },
        "inboundAuthCertificateChain1": {
            "type": "string",
            "metadata": {
                "description": "Base64 encoded certificate chain for inbound authentication"
            }
        },
        "inboundAuthCertificateSubjectName1": {
            "type": "string",
            "metadata": {
                "description": "Subject name for the inbound authentication certificate"
            }
        },
        "outboundAuthCertificate2": {
            "type": "string",
            "metadata": {
                "description": "URL to the outbound authentication certificate in Key Vault"
            }
        },
        "inboundAuthCertificateChain2": {
            "type": "string",
            "metadata": {
                "description": "Base64 encoded certificate chain for inbound authentication"
            }
        },
        "inboundAuthCertificateSubjectName2": {
            "type": "string",
            "metadata": {
                "description": "Subject name for the inbound authentication certificate"
            }
        }
    },
    "variables": {
        "location1": "[parameters('location1')]",
        "location2": "[parameters('location2')]",
        "gateway1Name": "[parameters('gateway1Name')]",
        "gateway2Name": "[parameters('gateway2Name')]",
        "localGatewayName11": "[parameters('localGatewayName11')]",
        "localGatewayName12": "[parameters('localGatewayName12')]",
        "localGatewayName21": "[parameters('localGatewayName21')]",
        "localGatewayName22": "[parameters('localGatewayName22')]",
        "gateway1PublicIP1Name": "[parameters('gateway1PublicIP1Name')]",
        "gateway1PublicIP2Name": "[parameters('gateway1PublicIP2Name')]",
        "gateway2PublicIP1Name": "[parameters('gateway2PublicIP1Name')]",
        "gateway2PublicIP2Name": "[parameters('gateway2PublicIP2Name')]",
        "gateway2PublicIP1Id": "[resourceId(subscription().subscriptionId,resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]",
        "gateway2PublicIP2Id": "[resourceId(subscription().subscriptionId,resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]",
        "gateway1PublicIP1Id": "[resourceId(subscription().subscriptionId,resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]",
        "gateway1PublicIP2Id": "[resourceId(subscription().subscriptionId,resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]",
        "asnGtw1": "[parameters('asnGtw1')]",
        "asnGtw2": "[parameters('asnGtw2')]",
        "connectionName11-21": "[parameters('connectionName11-21')]",
        "connectionName12-22": "[parameters('connectionName12-22')]",
        "connectionName21-11": "[parameters('connectionName21-11')]",
        "connectionName22-12": "[parameters('connectionName22-12')]",
        "outboundAuthCertificate1": "[parameters('outboundAuthCertificate1')]",
        "inboundAuthCertificateChain1": "[parameters('inboundAuthCertificateChain1')]",
        "inboundAuthCertificateSubjectName1": "[parameters('inboundAuthCertificateSubjectName1')]",
        "outboundAuthCertificate2": "[parameters('outboundAuthCertificate2')]",
        "inboundAuthCertificateChain2": "[parameters('inboundAuthCertificateChain2')]",
        "inboundAuthCertificateSubjectName2": "[parameters('inboundAuthCertificateSubjectName2')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName11')]",
            "apiVersion": "2024-05-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location2')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway1PublicIP1Id'),'2024-05-01').ipAddress]",
                "bgpSettings": {
                    "asn": "[variables('asnGtw1')]",
                    "bgpPeeringAddress": "[first(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name')),'2017-10-01').bgpSettings.bgpPeeringAddress , ','))]",
                    "peerWeight": 0
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName12')]",
            "apiVersion": "2024-05-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location2')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway1PublicIP2Id'),'2024-05-01').ipAddress]",
                "bgpSettings": {
                    "asn": "[variables('asnGtw1')]",
                    "bgpPeeringAddress": "[last(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name')),'2017-10-01').bgpSettings.bgpPeeringAddress , ','))]",
                    "peerWeight": 0
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName21')]",
            "apiVersion": "2024-05-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location1')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway2PublicIP1Id'),'2024-05-01').ipAddress]",
                "bgpSettings": {
                    "asn": "[variables('asnGtw2')]",
                    "bgpPeeringAddress": "[first(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name')),'2017-10-01').bgpSettings.bgpPeeringAddress , ','))]",
                    "peerWeight": 0
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName22')]",
            "apiVersion": "2024-05-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location1')]",
            "dependsOn": [],
            "properties": {
                "gatewayIpAddress": "[reference(variables('gateway2PublicIP2Id'),'2024-05-01').ipAddress]",
                "bgpSettings": {
                    "asn": "[variables('asnGtw2')]",
                    "bgpPeeringAddress": "[last(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name')),'2017-10-01').bgpSettings.bgpPeeringAddress , ','))]",
                    "peerWeight": 0
                }
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName11-21')]",
            "apiVersion": "2024-05-01",
            "comments": "VPN connection between [Gateway1] and [Gateway2-pubIP1]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName21'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName21'))]"
                },
                "connectionType": "IPsec",
                "authenticationType": "Certificate",
                "certificateAuthentication": {
                    "outboundAuthCertificate": "[variables('outboundAuthCertificate1')]",
                    "inboundAuthCertificateChain": [
                        "[variables('inboundAuthCertificateChain2')]"
                    ],
                    "inboundAuthCertificateSubjectName": "[variables('inboundAuthCertificateSubjectName2')]"
                },
                "enableBGP": true
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName12-22')]",
            "apiVersion": "2024-05-01",
            "comments": "VPN connection between [Gateway1] and [Gateway2-pubIP2]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName22'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName22'))]"
                },
                "connectionType": "IPsec",
                "authenticationType": "Certificate",
                "certificateAuthentication": {
                    "outboundAuthCertificate": "[variables('outboundAuthCertificate1')]",
                    "inboundAuthCertificateChain": [
                        "[variables('inboundAuthCertificateChain2')]"
                    ],
                    "inboundAuthCertificateSubjectName": "[variables('inboundAuthCertificateSubjectName2')]"
                },
                "enableBGP": true
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName21-11')]",
            "apiVersion": "2024-05-01",
            "comments": "VPN connection between [Gateway2] and [Gateway1-pubIP1]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName11'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName11'))]"
                },
                "connectionType": "IPsec",
                "authenticationType": "Certificate",
                "certificateAuthentication": {
                    "outboundAuthCertificate": "[variables('outboundAuthCertificate2')]",
                    "inboundAuthCertificateChain": [
                        "[variables('inboundAuthCertificateChain1')]"
                    ],
                    "inboundAuthCertificateSubjectName": "[variables('inboundAuthCertificateSubjectName1')]"
                },
                "enableBGP": true
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName22-12')]",
            "apiVersion": "2024-05-01",
            "comments": "VPN connection between [Gateway2] and [Gateway1-pubIP2]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName12'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName12'))]"
                },
                "connectionType": "IPsec",
                "authenticationType": "Certificate",
                "certificateAuthentication": {
                    "outboundAuthCertificate": "[variables('outboundAuthCertificate2')]",
                    "inboundAuthCertificateChain": [
                        "[variables('inboundAuthCertificateChain1')]"
                    ],
                    "inboundAuthCertificateSubjectName": "[variables('inboundAuthCertificateSubjectName1')]"
                },
                "enableBGP": true
            }
        }
    ]
}