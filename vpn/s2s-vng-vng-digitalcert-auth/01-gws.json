{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location1": {
      "type": "string",
      "defaultValue": "uksouth",
      "metadata": {
        "description": "Azure region"
      }
    },
    "location2": {
      "type": "string",
      "defaultValue": "uksouth",
      "metadata": {
        "description": "Azure region"
      }
    },
    "vnet1Name": {
      "type": "string",
      "defaultValue": "vnet1",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vnet2Name": {
      "type": "string",
      "defaultValue": "vnet2",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vNet1AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "vNet2AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "subnet1",
      "metadata": {
        "description": "Arbitrary name for the Azure Subnet"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "subnet2",
      "metadata": {
        "description": "Arbitrary name for the Azure Subnet"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/27",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of vNet1AddressPrefix address space"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/27",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of vNet2AddressPrefix address space"
      }
    },
    "gateway1Name": {
      "type": "string",
      "defaultValue": "vpnGw1",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gateway2Name": {
      "type": "string",
      "defaultValue": "vpnGw2",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gateway1subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.224/27",
      "metadata": {
        "description": "CIDR block for gateway subnet, subset of vNet1AddressPrefix address space"
      }
    },
    "gateway2subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.2.224/27",
      "metadata": {
        "description": "CIDR block for gateway subnet, subset of vNet2AddressPrefix address space"
      }
    },
    "gateway1PublicIP1Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('gateway1Name'),'IP1')]",
      "metadata": {
        "description": "Name for public IP1 resource used for the new azure gateway1"
      }
    },
    "gateway1PublicIP2Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('gateway1Name'),'IP2')]",
      "metadata": {
        "description": "Name for public IP2 resource used for the new azure gateway1"
      }
    },
    "gateway2PublicIP1Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('gateway2Name'),'IP1')]",
      "metadata": {
        "description": "Name for public IP1 resource used for the new azure gateway2"
      }
    },
    "gateway2PublicIP2Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('gateway2Name'),'IP2')]",
      "metadata": {
        "description": "Name for public IP2 resource used for the new azure gateway2"
      }
    },
    "gatewaySku": {
      "type": "string",
      "defaultValue": "VpnGw2AZ",
      "allowedValues": [
        "VpnGw2AZ",
        "VpnGw3AZ",
        "VpnGw4AZ",
        "VpnGw5AZ"
      ],
      "metadata": {
        "description": "The Sku of the Gateway"
      }
    },
    "asnGtw1": {
      "type": "int",
      "defaultValue": 65010,
      "metadata": {
        "description": "BGP Autonomous System Number of the VNet"
      }
    },
    "asnGtw2": {
      "type": "int",
      "defaultValue": 65020,
      "metadata": {
        "description": "BGP Autonomous System Number of the remote VNet"
      }
    },
    "vm1Name": {
      "type": "string",
      "defaultValue": "vm1",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vm2Name": {
      "type": "string",
      "defaultValue": "vm2",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "metadata": {
        "description": "Size of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for sample VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "User password for sample VM"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The storage account type for the disks of the VM"
      }
    },
    "userAssignedIdentityName": {
      "type": "string",
      "defaultValue": "[format('usrId{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the user assigned identity to be created"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[format('kv{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Key Vault to be created"
      }
    },
    "certificateSubject": {
      "type": "string",
      "defaultValue": "VPNCert",
      "metadata": {
        "description": "Subject of the certificate to be created in the Key Vault"
      }
    }
  },
  "variables": {
    "location1": "[parameters('location1')]",
    "location2": "[parameters('location2')]",
    "vnet1Name": "[parameters('vnet1Name')]",
    "vnet2Name": "[parameters('vnet2Name')]",
    "subnet1Name": "[parameters('subnet1Name')]",
    "subnet2Name": "[parameters('subnet2Name')]",
    "vNet1AddressPrefix": "[parameters('vNet1AddressPrefix')]",
    "vNet2AddressPrefix": "[parameters('vNet2AddressPrefix')]",
    "subnet1Prefix": "[parameters('subnet1Prefix')]",
    "subnet2Prefix": "[parameters('subnet2Prefix')]",
    "gateway1SubnetPrefix": "[parameters('gateway1SubnetPrefix')]",
    "gateway2SubnetPrefix": "[parameters('gateway2SubnetPrefix')]",
    "vnet1ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1Name'))]",
    "vnet2ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2Name'))]",
    "gateway1subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet1Name'),'GatewaySubnet') ]",
    "gateway2subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet2Name'),'GatewaySubnet') ]",
    "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet1Name'), variables('subnet1Name') )]",
    "subnet2Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet2Name'), variables('subnet2Name') )]",
    "gateway1Name": "[parameters('gateway1Name')]",
    "gateway2Name": "[parameters('gateway2Name')]",
    "gateway1PublicIP1Name": "[parameters('gateway1PublicIP1Name')]",
    "gateway1PublicIP2Name": "[parameters('gateway1PublicIP2Name')]",
    "gateway2PublicIP1Name": "[parameters('gateway2PublicIP1Name')]",
    "gateway2PublicIP2Name": "[parameters('gateway2PublicIP2Name')]",
    "asnGtw1": "[parameters('asnGtw1')]",
    "asnGtw2": "[parameters('asnGtw2')]",
    "keyVaultName": "[parameters('keyVaultName')]",
    "userAssignedIdentityName": "[parameters('userAssignedIdentityName')]",
    "vm1Name": "[parameters('vm1Name')]",
    "vm2Name": "[parameters('vm2Name')]",
    "nic1Name": "[concat(variables('vm1Name'), '-nic')]",
    "nic2Name": "[concat(variables('vm2Name'), '-nic')]",
    "publisher": "canonical",
    "offer": "ubuntu-24_04-lts",
    "sku": "server",
    "version": "latest",
    "vm1PublicIPName": "[concat(variables('vm1Name'), '-pubIP')]",
    "vm2PublicIPName": "[concat(variables('vm2Name'), '-pubIP')]",
    "vmSize": "[parameters('vmSize')]",
    "storageAccountType": "[parameters('storageAccountType')]"
   
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('userAssignedIdentityName')]",
      "location": "[variables('location1')]"
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-02-01",
      "name": "[variables('keyVaultName')]",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ],
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2023-01-31').principalId]",
            "permissions": {
              "keys": [],
              "secrets": [ "all", "get", "list", "set", "delete", "recover", "backup", "restore", "purge" ],
              "certificates": [ "all", "get", "list", "update", "create", "import", "delete", "recover", "backup", "restore", "managecontacts", "getissuers", "listissuers", "setissuers", "deleteissuers", "manageissuers", "purge" ]
            }
          }
        ],
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": true
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet1Name')]",
      "apiVersion": "2024-05-01",
      "location": "[variables('location1')]",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet1AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway1subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet2Name')]",
      "apiVersion": "2024-05-01",
      "location": "[variables('location2')]",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet2AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway2subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP1Name')]",
      "apiVersion": "2024-05-01",
      "comments": "public IP of the VPN Gateway1-instance 0",
      "location": "[variables('location1')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1",
        "2"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP2Name')]",
      "apiVersion": "2024-05-01",
      "comments": "public IP of the VPN Gateway1- instance 1",
      "location": "[variables('location1')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1",
        "2"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP1Name')]",
      "apiVersion": "2024-05-01",
      "comments": "public IP of the VPN Gateway2-instance 0",
      "location": "[variables('location2')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1",
        "2"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP2Name')]",
      "apiVersion": "2024-05-01",
      "comments": "public IP of the VPN Gateway2- instance 1",
      "location": "[variables('location2')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1",
        "2"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },

    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway1Name')]",
      "apiVersion": "2024-05-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1Name'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ],
      "identity": {
        "type": "userAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]":{}
        }
      },
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]"
              }
            },
            "name": "gw1Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]"
              }
            },
            "name": "gw1Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2",
        "bgpSettings": {
          "asn": "[variables('asnGtw1')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway2Name')]",
      "apiVersion": "2024-05-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2Name'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ],
      "identity": {
        "type": "userAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]":{}
        }
      },
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]"
              }
            },
            "name": "gw2Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]"
              }
            },
            "name": "gw2Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2",
        "bgpSettings": {
          "asn": "[variables('asnGtw2')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm1PublicIPName')]",
      "apiVersion": "2024-05-01",
      "location": "[variables('location1')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1",
        "2"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm2PublicIPName')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic1Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm1PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic2Name')]",
      "apiVersion": "2024-05-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm2PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm2PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm1Name')]",
      "apiVersion": "2024-07-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('publisher')]",
            "offer": "[variables('offer')]",
            "sku": "[variables('sku')]",
            "version": "[variables('version')]"
          },
          "osDisk": {
            "name": "[concat(variables('vm1Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic1Name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm2Name')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('publisher')]",
            "offer": "[variables('offer')]",
            "sku": "[variables('sku')]",
            "version": "[variables('version')]"
          },
          "osDisk": {
            "name": "[concat(variables('vm2Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic2Name'))]"
            }
          ]
        }
      }
    }
  ]
}