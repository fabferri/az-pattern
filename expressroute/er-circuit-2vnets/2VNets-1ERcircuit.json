{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location1": {
            "type": "string",
            "defaultValue": "westus2",
            "metadata": {
                "description": "azure region where is deployed the first VNet"
            }
        },
        "location2": {
            "type": "string",
            "defaultValue": "westus2",
            "metadata": {
                "description": "azure region where is deployed the second VNet"
            }
        },
        "gatewaySku": {
            "type": "string",
            "defaultValue": "ErGw1Az",
            "metadata": {
                "description": "The SKU for the ExpressRoute Gateway"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password for the VMs"
            }
        },
        "vmsize": {
            "type": "string",
            "defaultValue": "Standard_F2s_v2",
            "metadata": {
                "description": "VM SKU"
            }
        }
    },
    "variables": {
        "vNet1": {
            "location": "[parameters('location1')]",
            "name": "vnet1",
            "addressSpacePrefix": "10.0.1.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.1.0/27",
            "subnet2Name": "GatewaySubnet",
            "subnet2Prefix": "10.0.1.192/26",
            "gatewayPublicIPName": "gw1-pubIP",
            "gatewayName": "gw1",
            "gatewaySku": "[parameters('gatewaySku')]",
            "connectionName": "conn-er-vnet1",
            "authorizationKey": "AUTHORIZATION_CODE_1",
            "erCircuitId": "EXPRESSROUTE_CIRCUIT1_ID"
        },
        "vNet2": {
            "location": "[parameters('location2')]",
            "name": "vnet2",
            "addressSpacePrefix": "10.0.2.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.2.0/27",
            "subnet2Name": "GatewaySubnet",
            "subnet2Prefix": "10.0.2.192/26",
            "gatewayPublicIPName": "gw2-pubIP",
            "gatewayName": "gw2",
            "gatewaySku": "[parameters('gatewaySku')]",
            "connectionName": "conn-er-vnet2",
            "authorizationKey": "AUTHORIZATION_CODE_2",
            "erCircuitId": "EXPRESSROUTE_CIRCUIT2_ID"
        },
        "nsg1Name": "nsg1",
        "nsg2Name": "nsg2",
        "vmsize": "[parameters('vmsize')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "vm1Name": "vm1",
        "vm2Name": "vm2",
        "vmarray": [
            {
                "location": "[variables('vNet1').location]",
                "vmName": "[variables('vm1Name')]",
                "vmSize": "[variables('vmSize')]",
                "imagePublisher": "canonical",
                "imageOffer": "0001-com-ubuntu-server-jammy",
                "imageSKU": "22_04-lts-gen2",
                "vNetName": "[variables('vNet1').name]",
                "subnetName": "[variables('vNet1').subnet1Name]",
                "nicName": "[format('{0}-{1}',variables('vm1Name'),'NIC')]",
                "privateIPName":"[format('{0}-{1}',variables('vm1Name'),'privIP')]",
                "publicIPName":"[format('{0}-{1}',variables('vm1Name'),'pubIP')]",
                "privateIP": "10.0.1.10",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            },
            {
                "location": "[variables('vNet2').location]",
                "vmName": "[variables('vm2Name')]",
                "vmSize": "[variables('vmSize')]",
                "imagePublisher": "canonical",
                "imageOffer": "0001-com-ubuntu-server-jammy",
                "imageSKU": "22_04-lts-gen2",
                "vNetName": "[variables('vNet2').name]",
                "subnetName": "[variables('vNet2').subnet1Name]",
                "nicName": "[format('{0}-{1}',variables('vm2Name'),'NIC')]",
                "privateIPName":"[format('{0}-{1}',variables('vm2Name'),'privIP')]",
                "publicIPName":"[format('{0}-{1}',variables('vm2Name'),'pubIP')]",
                "privateIP": "10.0.2.10",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "apiVersion": "2022-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg1Name')]",
            "location": "[variables('vNet1').location]",
            "comments": "NSG applied to the subnets in VNet1",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "RDP-rule",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 600,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2022-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg2Name')]",
            "location": "[variables('vNet2').location]",
            "comments": "NSG applied to the subnets in VNet2",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2022-11-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet1').name]",
            "location": "[variables('vNet1').location]",
            "comments": "This is the first vNet",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1Name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet1').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet1').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnet1Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg1Name'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vNet1').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnet2Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2022-11-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet2').name]",
            "location": "[variables('vNet2').location]",
            "comments": "This is the second vNet",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet2').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet2').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet2').subnet1Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg2Name'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vNet2').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet2').subnet2Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vNet1').gatewayPublicIPName]",
            "apiVersion": "2022-11-01",
            "location": "[variables('vNet1').location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "comments": "This is the public IP for ExpressRoute Gateway in vnet1",
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[variables('vNet1').gatewayName]",
            "apiVersion": "2022-11-01",
            "location": "[variables('vNet1').location]",
            "comments": "This is the ExpressRoute Gateway for vNet1",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vNet1').gatewayPublicIPName)]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNet1').name, 'GatewaySubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vNet1').gatewayPublicIPName)]"
                            }
                        },
                        "name": "gwipconf1"
                    }
                ],
                "gatewayType": "ExpressRoute",
                "sku": {
                    "name": "[variables('vNet1').gatewaySku]",
                    "tier": "[variables('vNet1').gatewaySku]"
                },
                "vpnType": "RouteBased"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vNet2').gatewayPublicIPName]",
            "apiVersion": "2022-11-01",
            "location": "[variables('vNet2').location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "comments": "This is the public IP for ExpressRoute Gateway in vnet2",
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[variables('vNet2').gatewayName]",
            "apiVersion": "2022-11-01",
            "location": "[variables('vNet2').location]",
            "comments": "This is the ExpressRoute Gateway for vNet",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vNet2').gatewayPublicIPName)]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNet2').name, 'GatewaySubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vNet2').gatewayPublicIPName)]"
                            }
                        },
                        "name": "gwipconf-2"
                    }
                ],
                "gatewayType": "ExpressRoute",
                "sku": {
                    "name": "[variables('vNet2').gatewaySku]",
                    "tier": "[variables('vNet2').gatewaySku]"
                },
                "vpnType": "RouteBased"
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2022-11-01",
            "name": "[variables('vNet1').connectionName]",
            "location": "[variables('vNet1').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet1').gatewayName  )]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet1').gatewayName )]"
                },
                "connectionType": "ExpressRoute",
                "routingWeight": 0,
                "authorizationKey": "[variables('vNet1').authorizationKey]",
                "peer": {
                    "id": "[variables('vNet1').erCircuitId]"
                }
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2022-11-01",
            "name": "[variables('vNet2').connectionName]",
            "location": "[variables('vNet2').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet2').gatewayName  )]",
                "[resourceId('Microsoft.Network/connections', variables('vNet1').connectionName  )]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vNet2').gatewayName )]"
                },
                "connectionType": "ExpressRoute",
                "routingWeight": 0,
                "authorizationKey": "[variables('vNet2').authorizationKey]",
                "peer": {
                    "id": "[variables('vNet2').erCircuitId]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vmArray')[copyIndex()].publicIPName]",
            "apiVersion": "2022-11-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "crate public IP for the VMs",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "copy": {
                "name": "publicIpCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "apiVersion": "2022-11-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[ variables('vmArray')[copyIndex()].nicName]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vmArray')[copyIndex()].vNetName )]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmArray')[copyIndex()].publicIPName )]"
            ],
            "properties": {
                "primary": true,
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]",
                "enableAcceleratedNetworking": "[variables('vmArray')[copyIndex()].acceleratedNetworking]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
                            "publicIPAddress": {
                                "id": "[resourceId( 'Microsoft.Network/publicIPAddresses', variables('vmArray')[copyIndex()].publicIPName) ]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vNetName, variables('vmArray')[copyIndex()].subnetName)]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2023-03-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArray')[copyIndex()].nicName  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].imagePublisher]",
                        "offer": "[variables('vmArray')[copyIndex()].imageOffer]",
                        "sku": "[variables('vmArray')[copyIndex()].imageSKU]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OsDisk')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArray')[copyIndex()].nicName  )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        }
    ]
}