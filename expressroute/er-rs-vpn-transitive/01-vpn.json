{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location1": {
            "type": "string",
            "metadata": {
                "description": "Azure regions with Availability Zone"
            }
        },
        "location2": {
            "type": "string",
            "metadata": {
                "description": "Azure regions with Availability Zone"
            }
        },
        "vnet1Name": {
            "type": "string",
            "defaultValue": "vnet1",
            "metadata": {
                "description": "Arbitrary name for the Azure Virtual Network 1"
            }
        },
        "vnet2Name": {
            "type": "string",
            "defaultValue": "vnet2",
            "metadata": {
                "description": "Arbitrary name for the Azure Virtual Network 2"
            }
        },
        "onPremisesAddressPrefix": {
            "type": "string",
            "defaultValue": "10.1.34.0/25",
            "metadata": {
                "description": "network on-premises"
            }
        },
        "vnet1AddressPrefix": {
            "type": "string",
            "defaultValue": "10.100.0.0/23",
            "metadata": {
                "description": "CIDR block representing the address space of the Azure VNet 1"
            }
        },
        "vnet2AddressPrefix": {
            "type": "string",
            "defaultValue": "10.200.0.0/24",
            "metadata": {
                "description": "CIDR block representing the address space of the Azure VNet 2"
            }
        },
        "subnet11Name": {
            "type": "string",
            "defaultValue": "subnet11",
            "metadata": {
                "description": "Arbitrary name for the Azure subnet1 in VNet1"
            }
        },
        "subnet12Name": {
            "type": "string",
            "defaultValue": "subnet12",
            "metadata": {
                "description": "Arbitrary name for the Azure subnet2 in VNet1"
            }
        },
        "subnet21Name": {
            "type": "string",
            "defaultValue": "subnet21",
            "metadata": {
                "description": "Arbitrary name for the Azure subnet1 in VNet2"
            }
        },
        "subnet22Name": {
            "type": "string",
            "defaultValue": "subnet22",
            "metadata": {
                "description": "Arbitrary name for the Azure subnet2 in VNet2"
            }
        },
        "subnet11Prefix": {
            "type": "string",
            "defaultValue": "10.100.0.0/27",
            "metadata": {
                "description": "CIDR block for VNet1-subnet1. It is a subset of vnet1AddressPrefix address space"
            }
        },
        "subnet12Prefix": {
            "type": "string",
            "defaultValue": "10.100.0.32/27",
            "metadata": {
                "description": "CIDR block for VNet1-subnet2. It is a subset of vnet1AddressPrefix address space"
            }
        },
        "routeserver1subnetPrefix": {
            "type": "string",
            "defaultValue": "10.100.0.64/26",
            "metadata": {
                "description": "CIDR block for VNet1-RouteServerSubnet. It is a subset of vnet1AddressPrefix address space"
            }
        },
        "gateway1subnetPrefix": {
            "type": "string",
            "defaultValue": "10.100.0.192/26",
            "metadata": {
                "description": "CIDR block for gateway subnet- it is a subset of vnet1AddressPrefix address space"
            }
        },
        "subnet21Prefix": {
            "type": "string",
            "defaultValue": "10.200.0.0/27",
            "metadata": {
                "description": "CIDR block for VNet2-subnet1. It is a subset of vnet2AddressPrefix address space"
            }
        },
        "subnet22Prefix": {
            "type": "string",
            "defaultValue": "10.200.0.64/26",
            "metadata": {
                "description": "CIDR block for subnet2 in VNet2- it is a subset of vnet2AddressPrefix address space"
            }
        },
        "gateway2subnetPrefix": {
            "type": "string",
            "defaultValue": "10.200.0.192/27",
            "metadata": {
                "description": "CIDR block for gateway subnet- it is a subset of vnet2AddressPrefix address space"
            }
        },
        "vpnGateway1Name": {
            "type": "string",
            "defaultValue": "vpnGw1",
            "metadata": {
                "description": "Arbitrary name for the VPN gateway1"
            }
        },
        "vpnGateway2Name": {
            "type": "string",
            "defaultValue": "vpnGw2",
            "metadata": {
                "description": "Arbitrary name for the new gateway2"
            }
        },
        "gatewaySku": {
            "type": "string",
            "defaultValue": "VpnGw2AZ",
            "allowedValues": [
                "VpnGw1AZ",
                "VpnGw2AZ",
                "VpnGw3AZ",
                "VpnGw4AZ",
                "VpnGw5AZ"
            ],
            "metadata": {
                "description": "The Sku of the Gateway"
            }
        },
        "vpnGatewayGeneration": {
            "type": "string",
            "defaultValue": "Generation2",
            "allowedValues": [
                "Generation1",
                "Generation2"
            ]
        },
        "localGatewayName11": {
            "type": "string",
            "defaultValue": "localGateway11",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway1"
            }
        },
        "localGatewayName12": {
            "type": "string",
            "defaultValue": "localGateway12",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway1"
            }
        },
        "localGatewayName21": {
            "type": "string",
            "defaultValue": "localGateway21",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway2"
            }
        },
        "localGatewayName22": {
            "type": "string",
            "defaultValue": "localGateway22",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway2"
            }
        },
        "connectionName11-21": {
            "type": "string",
            "defaultValue": "gtw1-to-gtw2-pubIP1",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "connectionName12-22": {
            "type": "string",
            "defaultValue": "gtw1-to-gtw2-pubIP2",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "connectionName21-11": {
            "type": "string",
            "defaultValue": "gtw2-to-gtw1-pubIP1",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "connectionName22-12": {
            "type": "string",
            "defaultValue": "gtw2-to-gtw1-pubIP2",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "sharedKey": {
            "type": "string",
            "defaultValue": "[format('secr-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Shared key (PSK) for IPSec tunnel"
            }
        },
        "vm1Name": {
            "type": "string",
            "defaultValue": "vm1",
            "metadata": {
                "description": "name of the VM in subnet1 in VNet1"
            }
        },
        "vm2Name": {
            "type": "string",
            "defaultValue": "vm2",
            "metadata": {
                "description": "name of the VM in subnet1 in VNet2"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "allowedValues": [
                "Standard_B1ls",
                "Standard_B1s",
                "Standard_DS1_v2",
                "Standard_DS5_v2"
            ],
            "metadata": {
                "description": "Size of the Virtual Machine"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "administrator username of the VMs"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "administrator password of the VMs"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The storage account type for the disks of the VMs"
            }
        }
    },
    "variables": {
        "location1": "[parameters('location1')]",
        "location2": "[parameters('location2')]",
        "vnet1Name": "[parameters('vnet1Name')]",
        "vnet2Name": "[parameters('vnet2Name')]",
        "subnet11Name": "[parameters('subnet11Name')]",
        "subnet12Name": "[parameters('subnet12Name')]",
        "subnet21Name": "[parameters('subnet21Name')]",
        "subnet22Name": "[parameters('subnet22Name')]",
        "vnet1AddressPrefix": "[parameters('vnet1AddressPrefix')]",
        "vnet2AddressPrefix": "[parameters('vnet2AddressPrefix')]",
        "subnet11Prefix": "[parameters('subnet11Prefix')]",
        "subnet12Prefix": "[parameters('subnet12Prefix')]",
        "routeserver1subnetPrefix": "[parameters('routeserver1subnetPrefix')]",
        "subnet21Prefix": "[parameters('subnet21Prefix')]",
        "subnet22Prefix": "[parameters('subnet22Prefix')]",
        "gateway1SubnetPrefix": "[parameters('gateway1SubnetPrefix')]",
        "gateway2SubnetPrefix": "[parameters('gateway2SubnetPrefix')]",

        "vpnGateway1Name": "[parameters('vpnGateway1Name')]",
        "vpnGateway2Name": "[parameters('vpnGateway2Name')]",
        "vpnGateway1PublicIP1Name": "[concat(parameters('vpnGateway1Name'),'-IP1')]",
        "vpnGateway1PublicIP2Name": "[concat(parameters('vpnGateway1Name'),'-IP2')]",
        "vpnGateway2PublicIP1Name": "[concat(parameters('vpnGateway2Name'),'-IP1')]",
        "vpnGateway2PublicIP2Name": "[concat(parameters('vpnGateway2Name'),'-IP2')]",
        "vpnGateway1PublicIP1Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('vpnGateway1PublicIP1Name'))]",
        "vpnGateway1PublicIP2Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('vpnGateway1PublicIP2Name'))]",
        "vpnGateway2PublicIP1Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('vpnGateway2PublicIP1Name'))]",
        "vpnGateway2PublicIP2Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('vpnGateway2PublicIP2Name'))]",

        "localGatewayName11": "[parameters('localGatewayName11')]",
        "localGatewayName12": "[parameters('localGatewayName12')]",
        "localGatewayName21": "[parameters('localGatewayName21')]",
        "localGatewayName22": "[parameters('localGatewayName22')]",
        "connectionName11-21": "[parameters('connectionName11-21')]",
        "connectionName12-22": "[parameters('connectionName12-22')]",
        "connectionName21-11": "[parameters('connectionName21-11')]",
        "connectionName22-12": "[parameters('connectionName22-12')]",
        "vpnGatewayGeneration": "[parameters('vpnGatewayGeneration')]",

        "imagePublisher": "canonical",
        "imageOffer": "0001-com-ubuntu-server-jammy",
        "imageSKU": "22_04-lts-gen2",
        "vmStorageAccountType": "[parameters('storageAccountType')]",
        "vm1Name": "[parameters('vm1Name')]",
        "vm2Name": "[parameters('vm2Name')]",
        "vm1privIPAddr": "10.100.0.10",
        "vm2privIPAddr": "10.200.0.10",
        "linuxUpdate": "sudo apt update",
        "linuxNgixCommand": "[concat('sudo apt-get -y install nginx && sudo systemctl enable nginx && sudo systemctl start nginx',' && ','echo \"<style> h1 { color: blue; } </style> <h1>\" > /var/www/html/index.nginx-debian.html', ' && ', 'cat /etc/hostname >> /var/www/html/index.nginx-debian.html', ' && ', 'echo \" </h1>\" >> /var/www/html/index.nginx-debian.html')]",
        "linuxCommand": "[concat( 'sleep 1m', ' && ', 'echo \"debconf debconf/frontend select Noninteractive\" | debconf-set-selections',  ' && ', variables('linuxUpdate'), ' && ', variables('linuxNgixCommand') )]",
        "vmArray": [
            {
                "deployment": true,
                "location": "[variables('location1')]",
                "vmName": "[variables('vm1Name')]",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[variables('imagePublisher')]",
                "offer": "[variables('imageOffer')]",
                "sku": "[variables('imageSKU')]",
                "vnetName": "[variables('vnet1Name')]",
                "subnetName": "[variables('subnet11Name')]",
                "nicName": "[concat(variables('vm1Name'),'-nic')]",
                "privateIP": "[variables('vm1privIPAddr')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "nsgName": "[concat(variables('vm1Name'),'-nsg')]",
                "pubIP": "[concat(variables('vm1Name'),'-pubIP')]",
                "commandToExecute": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "location": "[variables('location2')]",
                "vmName": "[variables('vm2Name')]",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "[variables('imagePublisher')]",
                "offer": "[variables('imageOffer')]",
                "sku": "[variables('imageSKU')]",
                "vnetName": "[variables('vnet2Name')]",
                "subnetName": "[variables('subnet21Name')]",
                "nicName": "[concat(variables('vm2Name'),'-nic')]",
                "privateIP": "[variables('vm2privIPAddr')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "nsgName": "[concat(variables('vm2Name'),'-nsg')]",
                "pubIP": "[concat(variables('vm2Name'),'-pubIP')]",
                "commandToExecute": "[variables('linuxCommand')]"
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet1Name')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location1')]",
            "comments": "Virtual Network1",
            "dependsOn": [
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet1AddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet11Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet11Prefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnet12Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet12Prefix')]"
                        }
                    },
                    {
                        "name": "RouteServerSubnet",
                        "properties": {
                            "addressPrefix": "[variables('routeserver1subnetPrefix')]"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('gateway1subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet2Name')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location2')]",
            "comments": "Virtual Network 2",
            "dependsOn": [
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet2AddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet21Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet21Prefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnet22Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet22Prefix')]"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('gateway2subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vpnGateway1PublicIP1Name')]",
            "apiVersion": "2022-05-01",
            "comments": "public IP of the VPN Gateway1-instance 0",
            "location": "[variables('location1')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "zones": [ "1", "2", "3" ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vpnGateway1PublicIP2Name')]",
            "apiVersion": "2022-05-01",
            "comments": "public IP of the VPN Gateway1- instance 1",
            "location": "[variables('location1')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "zones": [ "1", "2", "3" ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vpnGateway2PublicIP1Name')]",
            "apiVersion": "2022-05-01",
            "comments": "public IP of the VPN Gateway2-instance 0",
            "location": "[variables('location2')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "zones": [ "1", "2", "3" ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vpnGateway2PublicIP2Name')]",
            "apiVersion": "2022-05-01",
            "comments": "public IP of the VPN Gateway2- instance 1",
            "location": "[variables('location2')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "zones": [ "1", "2", "3" ]
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[variables('vpnGateway1Name')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location1')]",
            "comments": "VPN Gateway 1- deployed in location 1",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vpnGateway1PublicIP1Name'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vpnGateway1PublicIP2Name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet1Name'),'GatewaySubnet') ]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vpnGateway1PublicIP1Name'))]"
                            }
                        },
                        "name": "gtw1-config1"
                    },
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet1Name'),'GatewaySubnet') ]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vpnGateway1PublicIP2Name'))]"
                            }
                        },
                        "name": "gtw1-config2"
                    }
                ],
                "sku": {
                    "name": "[parameters('gatewaySku')]",
                    "tier": "[parameters('gatewaySku')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": true,
                "vpnGatewayGeneration": "[variables('vpnGatewayGeneration')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[variables('vpnGateway2Name')]",
            "apiVersion": "2022-05-01",
            "location": "[variables('location2')]",
            "comments": "VPN Gateway 2- deployed in location 2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vpnGateway2PublicIP1Name'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vpnGateway2PublicIP2Name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet2Name'),'GatewaySubnet') ]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vpnGateway2PublicIP1Name'))]"
                            }
                        },
                        "name": "gtw2-config1"
                    },
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet2Name'),'GatewaySubnet') ]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vpnGateway2PublicIP2Name'))]"
                            }
                        },
                        "name": "gtw2-config2"
                    }
                ],
                "sku": {
                    "name": "[parameters('gatewaySku')]",
                    "tier": "[parameters('gatewaySku')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": true,
                "vpnGatewayGeneration": "[variables('vpnGatewayGeneration')]"
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName11')]",
            "apiVersion": "2022-05-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vpnGateway1Name'))]"
            ],
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet1AddressPrefix')]",
                        "[parameters('onPremisesAddressPrefix')]"
                    ]
                },
                "gatewayIpAddress": "[reference(variables('vpnGateway1PublicIP1Id'),'2022-05-01').ipAddress]"
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName12')]",
            "apiVersion": "2022-05-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vpnGateway1Name'))]"
            ],
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet1AddressPrefix')]",
                        "[parameters('onPremisesAddressPrefix')]"
                    ]
                },
                "gatewayIpAddress": "[reference(variables('vpnGateway1PublicIP2Id'),'2022-05-01').ipAddress]"
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName21')]",
            "apiVersion": "2022-05-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vpnGateway2Name'))]"
            ],
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet2AddressPrefix')]"
                    ]
                },
                "gatewayIpAddress": "[reference(variables('vpnGateway2PublicIP1Id'),'2022-05-01').ipAddress]"
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName22')]",
            "apiVersion": "2022-05-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vpnGateway2Name'))]"
            ],
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet2AddressPrefix')]"
                    ]
                },
                "gatewayIpAddress": "[reference(variables('vpnGateway2PublicIP2Id'),'2022-05-01').ipAddress]"
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName11-21')]",
            "apiVersion": "2020-11-01",
            "comments": "VPN connection between [Gateway1] and [Gateway2-pubIP1]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vpnGateway1Name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName21'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vpnGateway1Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName21'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName12-22')]",
            "apiVersion": "2020-11-01",
            "comments": "VPN connection between [Gateway1] and [Gateway2-pubIP2]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vpnGateway1Name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName22'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vpnGateway1Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName22'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName21-11')]",
            "apiVersion": "2020-11-01",
            "comments": "VPN connection between [Gateway2] and [Gateway1-pubIP1]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vpnGateway2Name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName11'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vpnGateway2Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName11'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName22-12')]",
            "apiVersion": "2020-11-01",
            "comments": "VPN connection between [Gateway2] and [Gateway1-pubIP2]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vpnGateway2Name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName12'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vpnGateway2Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName12'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": false
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-05-01",
            "name": "[variables('vmArray')[copyIndex()].nsgName]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-privateNet",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "10.0.0.0/8",
                            "destinationAddressPrefix": "10.0.0.0/8",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "copy": {
                "name": "nsgCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat( variables('vmArray')[copyIndex()].pubIP )]",
            "apiVersion": "2022-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "copy": {
                "name": "pubIPCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vmArray')[copyIndex()].nicName]",
            "apiVersion": "2022-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "create NIC for the Azure VMs",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vmArray')[copyIndex()].vnetName) ]",
                "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIP) ]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmArray')[copyIndex()].nsgName )]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
                            "subnet": {
                                "id": "[resourceId( 'Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vnetName, variables('vmArray')[copyIndex()].subnetName)]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmArray')[copyIndex()].pubIP) ]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmArray')[copyIndex()].nsgName )]"
                },
                "primary": true,
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]",
                "enableAcceleratedNetworking": "[variables('vmArray')[copyIndex()].acceleratedNetworking]"
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2022-11-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArray')[copyIndex()].nicName )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": "[json('null')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('vmStorageAccountType')]"
                        },
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName, '-OSdisk')]",
                        "deleteOption": "Delete"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true,
                                "deleteOption": "Delete"
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',  variables('vmArray')[copyIndex()].nicName)]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmArray')[copyIndex()].vmName, '/', 'installcustomscript')]",
            "apiVersion": "2022-11-01",
            "comments": "custom script extension for ubuntu",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmArray')[copyIndex()].vmName )]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "commandToExecute": "[variables('vmArray')[copyIndex()].commandToExecute]"
                }
            }
        }
    ]
}